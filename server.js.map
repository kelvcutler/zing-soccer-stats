{"version":3,"sources":["../aaswZing/Zing/data/ServerContext.ts","../aaswZing/Zing/share/DB.ts","../aaswZing/Zing/data/UserManager.ts","../aaswZing/Zing/data/RightsManager.ts","../aaswZing/Zing/data/Query.ts","../aaswZing/Zing/data/DataSource.ts","../aaswZing/Zing/data/DataObj.ts","../aaswZing/Zing/data/MemDataSource.ts","../aaswZing/Zing/data/MongoDataSource.ts","../aaswZing/Zing/data/ZingEnv.ts","../aaswZing/Zing/data/ZingExpress.ts","models/ZPerson.ts","models/Person.ts","models/ZTeam.ts","models/Team.ts","models/ZPlayer.ts","models/Player.ts","models/ZGameEvent.ts","models/GameEvent.ts","models/ZGame.ts","models/Game.ts","models/ZMake.ts","SoccerStatsEnv.ts","common/AllRightsManager.ts","server/main.ts","../aaswZing/Zing/data/serverRefs.ts"],"names":[],"mappings":"AACA,MAAM,aAAa;IAIf,YAAY,OAAO,EAAC,QAAQ;QACxB,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QACvB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;IACvB,CAAC;IACD,UAAU,CAAC,OAAc;QACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IACD,UAAU;QACN,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACjD,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;ACZD,IAAO,EAAE,CA2IR;AA3ID,WAAO,EAAE;IACL,SAAS,KAAK;QACV,IAAI;YACA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,IAAE,OAAO;gBACvB,OAAO,IAAI,CAAC;SACnB;QAAC,OAAO,CAAC,EAAC;YACP,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,IAAI,KAAK,GAAG,CAAC,CAAC;IAOd,SAAgB,KAAK,CAAC,OAAe,EAAE,GAAS;QAC5C,IAAI,KAAK,EAAE;YAAE,OAAM;QACnB,IAAI,IAAI,EAAE;YACN,GAAG,CAAC,GAAG,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;YACxB,KAAK,EAAE,CAAC;SACX;IACL,CAAC;IANe,QAAK,QAMpB,CAAA;IAOD,SAAgB,GAAG,CAAC,OAAe,EAAE,GAAS;QAC1C,IAAI,KAAK,EAAE;YAAE,OAAM;QACnB,IAAI,IAAI,EAAE;YACN,KAAK,EAAE,CAAC;YACR,IAAI,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC,CAAC;YACd,GAAG,CAAC,GAAG,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;SAC3B;IAEL,CAAC;IATe,MAAG,MASlB,CAAA;IACD,IAAI,IAAI,GAAS,KAAK,CAAC;IACvB,SAAgB,QAAQ,CAAC,EAAU;QAC/B,IAAI,GAAC,EAAE,CAAC;IACZ,CAAC;IAFe,WAAQ,WAEvB,CAAA;IAOD,SAAgB,GAAG,CAAC,OAAe,EAAE,GAAS;QAC1C,IAAI,KAAK,EAAE;YAAE,OAAM;QACnB,IAAI,IAAI,EAAE;YACN,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC5B,GAAG,IAAI,KAAK,CAAC;aAChB;YACD,IAAI,GAAG;gBACH,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;;gBAEhC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC;YAC/B,IAAI,IAAI,EAAC;gBACL,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBACzC,IAAI,CAAC,SAAS,GAAC,GAAG,GAAC,OAAO,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAC,YAAY,CAAC;gBAChC,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,KAAK;oBACL,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC1B;SACJ;IACL,CAAC;IApBe,MAAG,MAoBlB,CAAA;IAED,SAAgB,UAAU,CAAC,OAAe;QACtC,IAAI,KAAK,EAAE;YAAE,OAAM;QACnB,IAAI;YACA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5B;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClB;IACL,CAAC;IAPe,aAAU,aAOzB,CAAA;IACD,IAAI,IAAI,GAAY,IAAI,CAAC;IAIzB,SAAgB,EAAE,CAAC,GAAW;QAC1B,IAAI,GAAG,IAAI,CAAC;QACZ,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;IACvB,CAAC;IAHe,KAAE,KAGjB,CAAA;IAID,SAAgB,GAAG,CAAC,GAAW;QAC3B,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;QACjB,IAAI,GAAG,KAAK,CAAC;IACjB,CAAC;IAHe,MAAG,MAGlB,CAAA;IACD,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,SAAgB,KAAK,CAAC,IAAW;QAChC,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,KAAK;YACR,KAAK,EAAE,CAAC;;YAER,KAAK,GAAC,CAAC,CAAC;QACT,QAAQ,CAAC,IAAI,CAAC,GAAC,KAAK,CAAC;IACtB,CAAC;IAPe,QAAK,QAOpB,CAAA;IACD,SAAgB,SAAS,CAAC,IAAW;QACpC,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK;YAAE,KAAK,GAAC,CAAC,CAAC;QACpB,EAAE,CAAC,GAAG,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC;IACpB,CAAC;IAJe,YAAS,YAIxB,CAAA;IACD,SAAgB,UAAU,CAAC,GAAW;QACrC,IAAI,CAAC,GAAU,SAAS,CAAC;QACzB,IAAI,GAAG;YAAE,CAAC,IAAE,GAAG,CAAC;QAChB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACZ,KAAK,IAAI,IAAI,IAAI,QAAQ,EAAC;YACzB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,CAAC;IARe,aAAU,aAQzB,CAAA;IACD,SAAgB,WAAW,CAAC,IAAY;QACvC,IAAI,IAAI,EAAC;YACR,QAAQ,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC;SACjB;aAAM;YACN,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAC;gBACxB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACpB;SACD;IACF,CAAC;IARe,cAAW,cAQ1B,CAAA;IACD,IAAI,YAAY,GAAC,IAAI,CAAC;IACtB,SAAgB,cAAc,CAAC,MAAa;QAC3C,IAAI,YAAY;YACf,YAAY,CAAC,aAAa,EAAE,CAAC;QAC9B,YAAY,GAAG,WAAW,CAAC,GAAE,EAAE;YAC9B,EAAE,CAAC,UAAU,EAAE,CAAC;QACjB,CAAC,EAAC,MAAM,CAAC,CAAC;IACX,CAAC;IANe,iBAAc,iBAM7B,CAAA;IACD,SAAgB,gBAAgB;QAC/B,aAAa,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC;IAFe,mBAAgB,mBAE/B,CAAA;AAEL,CAAC,EA3IM,EAAE,KAAF,EAAE,QA2IR;AChJD,MAAM,WAAW;IAIb;QACI,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;IAC7B,CAAC;IACD,IAAI,QAAQ,KAAY,OAAO,IAAI,CAAC,eAAe,CAAA,CAAA,CAAC;IACpD,KAAK,CAAC,QAAe,EAAC,QAAe,EAAC,IAAoC,EAClE,aAA2B;QAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBACnE,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,eAAe,GAAC,QAAQ,CAAC;oBAC9B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,IAAI,CAAC;oBAC9B,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;iBACnB;YACL,CAAC,CAAC,CAAC;SACN;aAAK;YACF,IAAI,CAAC,eAAe,GAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;YACzB,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;SACnB;IACL,CAAC;IAED,MAAM,CAAC,IAAuB;QAC1B,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAU,EAAC,EAAE;gBACrC,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,GAAG,CAAC,CAAC;iBACb;qBAAM;oBACH,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;oBAC1B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;oBACzB,IAAI,CAAC,IAAI,CAAC,CAAC;iBACd;YACL,CAAC,CAAC,CAAA;SACL;aAAM;YACH,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,CAAA;SACb;IACL,CAAC;IACD,UAAU,CAAC,QAAY,EAAC,QAAe,EAAC,IAAuB,EACvD,aAA2B;QAC/B,IAAI,CAAC,IAAI,CAAC,CAAC;IACf,CAAC;IACD,UAAU,CAAC,aAA4B;QACnC,IAAI,aAAa,EAAC;YACd,OAAO,aAAa,CAAC,UAAU,EAAE,CAAC;SACrC;aAAM;YACH,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;IACL,CAAC;IACD,OAAO,CAAC,IAAyB,EAAC,aAA4B;QAC1D,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;YACnD,IAAI,CAAC,IAAI,CAAC,CAAC;QACf,CAAC,EAAC,KAAK,EAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;IACD,eAAe,CAAC,QAAe,EAAC,QAAe,EAAC,aAA2B,EAAC,IAAoC;QAC5G,EAAE,CAAC,GAAG,CAAC,2CAA2C,EAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,qBAAqB,EAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IACD,gBAAgB,CAAC,aAA2B,EAAC,IAAuB;QAChE,EAAE,CAAC,GAAG,CAAC,4CAA4C,EAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACjC,CAAC;CACJ;ACpED,MAAe,aAAa;IAGxB,YAAY,UAAqB,EAAC,WAAuB;QACrD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAC,WAAW,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAClD,CAAC;IAQD,SAAS,CAAC,IAAa,EAAC,aAA2B,EAAC,IAA4B;QAC5E,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,CAAC,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAGD,SAAS,CAAC,IAAc,EAAC,aAA2B,EAAC,IAA4B;QAC7E,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,CAAC,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAID,KAAK,CAAC,MAAa,EAAC,QAAe,EAAC,IAAoC,EAAC,aAA2B;QAChG,IAAI,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;;YAE3D,IAAI,CAAC,2CAA2C,EAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IACD,UAAU,CAAC,QAAY,EAAC,QAAe,EAAC,IAAuB,EAAC,aAA2B;QACvF,IAAI,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;;YAElE,IAAI,CAAC,iDAAiD,CAAC,CAAC;IAChE,CAAC;IAES,WAAW,CAAC,IAAa,EAAC,GAAU,EAAC,aAA2B,EAAC,IAA4B;QACnG,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC;SACd;aAAM;YACH,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC/C,IAAI,OAAO,EAAC;oBACR,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,GAAG,GAAC,CAAC,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;iBACnD;qBAAM;oBACH,IAAI,CAAC,KAAK,CAAC,CAAC;iBACf;YACL,CAAC,CAAC,CAAA;SACL;IACL,CAAC;IACS,WAAW,CAAC,IAAc,EAAC,GAAU,EAAC,aAA2B,EAAC,IAA4B;QACpG,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC;SACd;aAAM;YACH,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC/C,IAAI,OAAO,EAAC;oBACR,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,GAAG,GAAC,CAAC,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;iBACnD;qBAAM;oBACH,IAAI,CAAC,KAAK,CAAC,CAAC;iBACf;YACL,CAAC,CAAC,CAAA;SACL;IACL,CAAC;CACJ;AC9DD,MAAM,KAAK;IAEP,YAAoB,GAAO;QACvB,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;IACjB,CAAC;IACD,MAAM,CAAC,EAAE,CAAC,OAAoB;QAC1B,IAAI,IAAI,GAAG,EAAE,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAA;QACxC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,OAAoB;QAC3B,OAAO,IAAI,KAAK,CAAE,EAAE,EAAE,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAA;IAClD,CAAC;IACD,MAAM,CAAC,KAAK,CAAC,IAAe,EAAC,EAAa;QACtC,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,CAAA;IACpD,CAAC;IACD,MAAM,CAAC,QAAQ;QACX,OAAO,IAAI,KAAK,CAAC,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,CAAA;IAChC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,IAAkC;QAC1C,IAAI,CAAC,GAAM,EAAC,EAAE,EAAC,MAAM,EAAC,CAAC;QACvB,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;YACf,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;QACD,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;IACvB,CAAC;IACD,MAAM,CAAC,EAAE,CAAC,KAA2B;QACjC,OAAO,IAAI,KAAK,CAAE,EAAE,EAAE,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAA;IAC7C,CAAC;IACD,MAAM,CAAC,YAAY,CAAC,KAAgB;QAChC,OAAO,IAAI,KAAK,CAAE,EAAC,EAAE,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAA;IAC5C,CAAC;IACD,MAAM,CAAC,KAAK,CAAC,EAAa,EAAC,EAAa;QACpC,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,EAAE;gBAAE,OAAO,IAAI,CAAC;;gBAChB,OAAO,KAAK,CAAC;aAElB,IAAI,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC;QAC1B,IAAI,OAAO,EAAE,IAAI,OAAO,EAAE;YAAE,OAAO,KAAK,CAAC;QACzC,QAAO,OAAO,EAAE,EAAC;YACb,KAAK,QAAQ,CAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,SAAS;gBACV,OAAO,EAAE,IAAE,EAAE,CAAC;YAClB,OAAO,CAAC,CAAA;gBACJ,OAAO,IAAI,CAAC,UAAU,CAAQ,EAAE,EAAQ,EAAE,CAAC,CAAC;aAC/C;SACJ;IACL,CAAC;IACD,OAAO,CAAC,GAAO;QACX,IAAI,GAAG,YAAY,OAAO;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACvD,QAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC;YACf,KAAK,IAAI;gBACL,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC;oBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,EAAC,GAAG,CAAC;wBAAE,OAAO,IAAI,CAAC;iBAC7C;gBACD,OAAO,KAAK,CAAC;YACjB,KAAK,KAAK;gBACN,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC;oBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAC,GAAG,CAAC;wBAAE,OAAO,KAAK,CAAA;iBAC9C;gBACD,OAAO,IAAI,CAAC;YAChB,KAAK,OAAO;gBACR,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,GAAG,CAAC,CAAC;YAC1D,KAAK,KAAK;gBACN,OAAO,IAAI,CAAC;YAChB,KAAK,MAAM;gBACP,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACxC,KAAK,IAAI;gBACL,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC;YACjC,KAAK,IAAI;gBACL,KAAK,IAAI,CAAC,IAAI,GAAG,EAAC;oBACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBACf,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC,CAAC,CAAC;wBAAE,OAAO,IAAI,CAAC;iBACtD;gBACD,OAAO,KAAK,CAAC;SAEpB;IACL,CAAC;IACD,MAAM,CAAC,SAAS,CAAC,EAAa,EAAC,GAAO;QAClC,QAAO,OAAO,EAAE,EAAC;YACb,KAAK,QAAQ,CAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,SAAS;gBACV,OAAO,EAAE,IAAI,GAAG,CAAC;YACrB;gBACI,OAAO,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC9B;IACL,CAAC;IACD,SAAS,CAAC,OAAc;QACpB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,MAAM;YAAE,OAAO,IAAI,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO,GAAG,CAAC;IACf,CAAC;IAED,MAAM;QACF,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACnB,IAAI,IAAI,GAAO,EAAE,EAAE,EAAC,GAAG,CAAC,EAAE,EAAE,CAAA;QAC5B,QAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;YAClB,KAAK,IAAI,CAAC;YACV,KAAK,KAAK;gBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;gBACrD,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACxC,MAAM;YACV,KAAK,KAAK;gBACN,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,GAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM;YACV,KAAK,IAAI;gBACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC9C,MAAM;YACV,KAAK,IAAI;gBACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC9C,MAAM;SACb;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAQ;QACpB,QAAO,OAAO,IAAI,EAAC;YACf,KAAK,QAAQ,CAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,SAAS;gBACV,OAAO,IAAI,CAAC;YAChB;gBACI,QAAO,IAAI,CAAC,EAAE,EAAC;oBACX,KAAK,IAAI;wBACL,OAAO,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACtD,KAAK,KAAK;wBACN,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACvD,KAAK,OAAO;wBACR,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;oBACzE,KAAK,KAAK;wBACN,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAC5B,KAAK,MAAM;wBACP,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;4BACf,IAAI,CAAC,IAAE,IAAI,EAAC;gCACR,IAAI,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;6BACnC;yBACJ;wBACD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5B,KAAK,IAAI;wBACL,OAAO,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;oBAC/B,KAAK,IAAI;wBACL,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;iBAC5D;SACR;IACL,CAAC;IACO,oBAAoB,CAAC,IAAiB;QAC1C,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;YACf,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAA;SACzC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,gBAAgB,CAAC,GAAc;QACnC,QAAO,OAAO,GAAG,EAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,SAAS;gBACV,OAAO,GAAG,CAAC;YACf;gBACI,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;SAC3B;IACL,CAAC;IACO,UAAU,CAAC,IAAkC;QACjD,IAAI,IAAI,GAAK,EAAE,EAAE,EAAC,MAAM,EAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;YACf,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;SAC3C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,MAAM,CAAC,YAAY,CAAC,IAAU;QAClC,IAAI,IAAI,GAAc,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;YACf,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAO;QACH,IAAI,IAAI,GAAK,EAAE,CAAC;QAEhB,QAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC;YACf,KAAK,IAAI;gBACL,IAAI,KAAK,GAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrD,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,CAAA;YACzB,KAAK,KAAK;gBACN,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,CAAA;YAC3D,KAAK,OAAO;gBACR,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;oBACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC;oBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;iBAC3B;gBACD,OAAO,IAAI,CAAC;YAChB,KAAK,KAAK;gBACN,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;YAC5B,KAAK,MAAM;gBACP,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAC;oBACnB,IAAI,CAAC,IAAE,IAAI,EAAC;wBACR,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACpB,IAAI,CAAC,EAAE;4BACH,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAE,MAAM,EAAC;gCACtC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,CAAC;6BACzC;;gCACG,IAAI,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;yBACpC;6BAAM,IAAI,CAAC,IAAE,CAAC;4BACX,IAAI,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;qBACpC;iBACJ;gBACD,OAAO,IAAI,CAAC;YAChB,KAAK,IAAI;gBACL,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC1B,KAAK,IAAI;gBACL,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,CAAA;YAC5D;gBACI,OAAO,EAAE,WAAW,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,CAAA;SACxC;IACL,CAAC;IACO,MAAM,CAAC,iBAAiB,CAAC,IAAO,EAAC,GAAU,EAAC,CAAI;QACpD,KAAK,IAAI,CAAC,IAAI,CAAC,EAAC;YACZ,IAAI,CAAC,IAAE,IAAI,EAAC;gBACR,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ;IACL,CAAC;IACO,gBAAgB,CAAC,OAAoB;QACzC,IAAI,IAAI,GAAK,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,IAAI,OAAO,EAAC;YAClB,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,MAAM,CAAC,YAAY,CAAC,GAAc;QACtC,QAAO,OAAO,GAAG,EAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,QAAQ,CAAC;YACd,KAAK,SAAS;gBACV,OAAO,GAAG,CAAC;YACf;gBACI,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;SAC5B;IACL,CAAC;IACO,MAAM,CAAC,UAAU,CAAC,EAAQ,EAAC,EAAQ;QACvC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC;QACzC,QAAO,EAAE,CAAC,GAAG,CAAC,EAAE,EAAC;YACb,KAAK,IAAI,CAAC;YACV,KAAK,KAAK;gBACN,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAC/D,KAAK,OAAO;gBACR,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAClF,KAAK,KAAK;gBACN,OAAO,IAAI,CAAC;YAChB,KAAK,MAAM;gBACP,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAC1C,KAAK,IAAI;gBACL,OAAO,EAAE,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;YACxC,KAAK,IAAI;gBACL,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjD;gBACI,EAAE,CAAC,GAAG,CAAC,2BAA2B,EAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC9C,OAAO,KAAK,CAAC;SACpB;IACL,CAAC;IACO,MAAM,CAAC,gBAAgB,CAAC,EAAe,EAAC,EAAe;QAC3D,IAAI,EAAE,CAAC,MAAM,IAAE,EAAE,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC;QACvC,KAAK,IAAI,CAAC,IAAI,EAAE,EAAC;YACb,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAC,EAAE,CAAC;gBAAE,OAAO,KAAK,CAAC;SAC9C;QACD,KAAK,IAAI,CAAC,IAAI,EAAE,EAAC;YACb,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAC,EAAE,CAAC;gBAAE,OAAO,KAAK,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,MAAM,CAAC,YAAY,CAAC,CAAY,EAAC,IAAiB;QACtD,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;YACf,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;gBAAE,OAAO,IAAI,CAAC;SACrC;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IACO,MAAM,CAAC,UAAU,CAAC,EAAK,EAAC,EAAK;QACjC,KAAK,IAAI,CAAC,IAAI,EAAE,EAAC;YACb,IAAI,EAAE,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,EAAE,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAC,EAAE,CAAC;gBAAE,OAAO,KAAK,CAAC;SACxC;QACD,KAAK,IAAI,CAAC,IAAI,EAAE,EAAC;YACb,IAAI,EAAE,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,EAAE,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAC,EAAE,CAAC;gBAAE,OAAO,KAAK,CAAC;SACxC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,UAAU,CAAC,IAAI,EAAC,EAAE,EAAC,GAAG;QAC1B,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,EAAC;YACL,QAAO,OAAO,IAAI,EAAC;gBACf,KAAK,QAAQ;oBACT,QAAQ,GAAC,IAAI,IAAE,GAAG,CAAC;oBACnB,MAAM;gBACV,KAAK,QAAQ;oBACT,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC;oBACtC,MAAM;gBACV;oBACI,QAAQ,GAAC,KAAK,CAAC;oBACf,MAAM;aACb;SACJ;QACD,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,EAAE,EAAC;YACH,QAAO,OAAO,EAAE,EAAC;gBACb,KAAK,QAAQ;oBACT,MAAM,GAAC,GAAG,IAAE,EAAE,CAAC;oBACf,MAAM;gBACV,KAAK,QAAQ;oBACT,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,IAAE,CAAC,CAAC;oBAClC,MAAM;gBACV;oBACI,MAAM,GAAC,KAAK,CAAC;oBACb,MAAM;aACb;SACJ;QACD,OAAO,QAAQ,IAAI,MAAM,CAAC;IAC9B,CAAC;IACO,SAAS,CAAC,IAAkC,EAAC,GAAG;QACpD,IAAI,OAAO,GAAG,IAAI,QAAQ;YAAE,OAAO,KAAK,CAAC;QACzC,KAAK,IAAI,GAAG,IAAI,IAAI,EAAC;YACjB,IAAI,GAAG,IAAE,IAAI,EAAC;gBACV,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAC,IAAI,CAAC;oBAAE,OAAO,KAAK,CAAC;aACjD;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAGD,SAAS,CAAC,GAAW;QACjB,QAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC;YACf,KAAK,IAAI;gBACL,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC;oBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,EAAC,GAAG,CAAC;wBAAE,OAAO,IAAI,CAAC;iBAC7C;gBACD,OAAO,KAAK,CAAC;YACjB,KAAK,KAAK;gBACN,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC;oBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAC,GAAG,CAAC;wBAAE,OAAO,KAAK,CAAA;iBAC9C;gBACD,OAAO,IAAI,CAAC;YAChB,KAAK,OAAO;gBACR,OAAO,KAAK,CAAC;YACjB,KAAK,KAAK;gBACN,OAAO,IAAI,CAAC;YAChB,KAAK,MAAM;gBACP,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YAC1C,KAAK,IAAI;gBACL,OAAO,KAAK,CAAC;YACjB,KAAK,IAAI;gBACL,OAAO,KAAK,CAAC;SACpB;IACL,CAAC;IACO,WAAW,CAAC,IAAkC,EAAC,GAAW;QAC9D,KAAK,IAAI,GAAG,IAAI,IAAI,EAAC;YACjB,IAAI,GAAG,IAAE,IAAI,EAAC;gBACV,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAC,IAAI,CAAC;oBAAE,OAAO,KAAK,CAAC;aACjD;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;ACjYD,MAAM,UAAU;IAGZ;QACI,OAAO,CAAC,YAAY,GAAC,IAAI,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,WAAuB;QAClC,IAAI,CAAC,WAAW,GAAC,WAAW,CAAC;IACjC,CAAC;IACD,gBAAgB;QACZ,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IACD,gBAAgB,CAAC,EAAgB;QAC7B,IAAI,CAAC,cAAc,GAAC,EAAE,CAAC;IAC3B,CAAC;IACD,QAAQ,KAAa,OAAO,KAAK,CAAA,CAAA,CAAC;IAClC,MAAM;QACF,IAAI,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,GAAG,CAAC,GAAU,EAAE,IAAoC,EAAC,YAAoB,EACjE,aAA2B;QAC/B,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,GAAU,EAAC,aAA2B,EAAC,IAA4B;QACtE,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,IAAI,CAAC,GAAU,EAAC,YAAqB;QACjC,EAAE,CAAC,GAAG,CAAE,sCAAsC,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,IAAI,CAAC,IAAa,EAAC,IAAsC,EAAC,YAAoB,EACtE,aAA2B;QAC/B,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,OAAO,CAAC,IAAa,EAAC,aAA2B,EAAC,IAA4B;QAC1E,IAAI,EAAE,GAAC,IAAI,CAAC,cAAc,CAAA;QAC1B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,SAAS,CAAC,IAAI,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SACzC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,KAAK,CAAC,IAAa,EAAC,YAAqB;QACrC,EAAE,CAAC,GAAG,CAAE,uCAAuC,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,GAAG,CAAC,GAAW,EAAC,IAAsC,EAAC,aAA2B;QAC9E,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,GAAW,EAAC,aAA2B,EAAC,IAA4B;QACvE,IAAI,EAAE,GAAC,IAAI,CAAC,cAAc,CAAC;QAC3B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,UAAU,CAAC,OAAc,EAAC,aAA2B,EAAC,IAA4B;QAC9E,IAAI,EAAE,GAAC,IAAI,CAAC,cAAc,CAAC;QAC3B,IAAG,EAAE,EAAC;YACF,EAAE,CAAC,YAAY,CAAC,OAAO,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SAC/C;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,OAAO,CAAC,OAAc,EAAC,aAA2B,EAAC,IAAyC;QACxF,EAAE,CAAC,GAAG,CAAC,iCAAiC,EAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IACD,UAAU,CAAC,aAA2B,EAAC,IAA4B;QAC/D,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,YAAY,CAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,OAAO,CAAC,IAAS,EAAC,IAAW,EAAC,aAA2B,EAAC,IAAsC;QAC5F,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,WAAW,CAAC,IAAS,EAAC,aAA2B,EAAC,IAAsC;QACpF,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,IAAI,CAAC,IAAc,EAAC,IAAyC,EAAC,aAA2B;QACrF,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,OAAO,CAAC,IAAc,EAAC,aAA2B,EAAC,IAA4B;QAC3E,IAAI,EAAE,GAAC,IAAI,CAAC,cAAc,CAAC;QAC3B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,SAAS,CAAC,IAAI,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SACzC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,MAAM,CAAC,GAAU,EAAC,IAAwB;QACtC,IAAI,CAAC,IAAI,CAAC,CAAA;IACd,CAAC;IACD,SAAS,CAAC,GAAU,EAAC,aAA2B,EAAC,IAA4B;QACzE,IAAI,EAAE,GAAC,IAAI,CAAC,cAAc,CAAC;QAC3B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,WAAW,CAAC,GAAG,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SAC1C;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,IAAI,CAAC,QAAe,EAAE,MAAY,EAAC,IAAoD,EAC/E,QAAgB,EAAC,YAAoB,EAAC,aAA2B;QACrE,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IACS,WAAW,CAAC,IAAa,EAAC,GAAU,EAAC,IAAc,EAAC,IAA2B,EAAC,aAA2B;QACjH,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC;SACd;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBAC1C,IAAI,CAAC,GAAG,EAAC;oBACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,GAAG,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;iBACxD;YACL,CAAC,EAAC,KAAK,EAAC,aAAa,CAAC,CAAC;SAC1B;IACL,CAAC;IACD,OAAO,CAAC,QAAe,EAAC,MAAY,EAAC,aAA2B,EAAC,IAA4B;QACzF,IAAI,EAAE,GAAC,IAAI,CAAC,cAAc,CAAC;QAC3B,IAAI,EAAE,EAAC;YACH,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;SACpD;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC;SACf;IACL,CAAC;IACD,KAAK,CAAC,QAAe,EAAC,MAAY,EAAC,QAAgB,EAAC,YAAoB;QACpE,EAAE,CAAC,GAAG,CAAE,uCAAuC,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,iBAAiB,CAAC,GAAU;QAC/B,IAAI,CAAC,GAAG,EAAC;YACL,EAAE,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YAChC,OAAO,EAAE,CAAC;SACb;QACD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACjD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAAC,WAAW,CAAC,GAAU;QACzB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,SAAS,CAAC,GAAU;QACvB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,WAAW,CAAC,QAAe;QAC9B,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAC,OAAO,CAAC;QAC/B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,OAAO,QAAQ,GAAC,GAAG,GAAC,EAAE,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,aAAa,CAAC,YAAmB,EAAE,OAAgB;QACtD,IAAI,IAAI,GAAY,EAAE,CAAC;QACvB,KAAK,IAAI,GAAG,IAAI,OAAO,EAAC;YACpB,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,OAAO,CAAC,aAAa,CAAC,YAAY,EAAC,EAAE,CAAC,EAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAClB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,OAAO,CAAC,GAAW;QACf,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,KAAK,CAAC,MAAa,EAAC,QAAe,EAAC,IAAuB,EAAC,aAA4B;QACpF,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;;YAElE,IAAI,CAAC,0CAA0C,CAAC,CAAC;IACzD,CAAC;IACD,SAAS,CAAC,MAAa,EAAC,QAAe,EAAC,IAAoC;QACxE,IAAI,CAAC,mCAAmC,EAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IACD,UAAU,CAAC,IAAuB;QAC9B,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAC9C,CAAC;IACD,UAAU,CAAC,QAAY,EAAC,QAAe,EAAC,IAAuB,EAAC,aAA4B;QACxF,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;;YAEzE,IAAI,CAAC,gDAAgD,CAAC,CAAC;IAC/D,CAAC;CAEJ;AC5MD,MAAM,OAAO;IAOZ,YAAa,IAAQ;QACpB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAC;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,GAAC,GAAG,GAAC,IAAI,CAAC,GAAG,CAAC;SAC5C;QACD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;IAClB,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC;IACb,CAAC;IACD,aAAa;QACZ,IAAI,IAAI,CAAC,UAAU;YAClB,OAAO,IAAI,CAAC,UAAU,CAAC;aACnB,IAAI,IAAI,CAAC,MAAM;YACnB,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;aAC/B,IAAI,OAAO,CAAC,YAAY;YAC5B,OAAO,OAAO,CAAC,YAAY,CAAC;;YAE5B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,cAAc;QACb,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,IAAI,EAAE,EAAC;YACN,IAAI,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC;YAC/B,IAAI,EAAE,EAAC;gBACN,IAAI,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC;gBACxB,OAAO,EAAE,CAAC;aACV;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACD,KAAK;QACJ,IAAI,IAAI,CAAC,WAAW;YAAE,OAAO,IAAI,CAAC;QAClC,IAAI,IAAI,CAAC,UAAU,EAAC;YACnB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;gBACjC,IAAI,IAAI,CAAC,MAAM;oBACd,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;aAC5B;iBAAM;gBACN,OAAO,KAAK,CAAC;aACb;SACD;aAAM;YACN,IAAI,IAAI,CAAC,MAAM;gBACd,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;;gBAE3B,OAAO,IAAI,CAAC;SACb;IACF,CAAC;IACD,UAAU,CAAC,EAAU;QACpB,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;QACpB,IAAG,CAAC,EAAE;YAAE,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IACD,MAAM;QACC,OAAO,IAAI,CAAC;IACnB,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,GAAU,EAAE,IAAsC,EAAC,YAAoB,EAChF,aAA2B;QAC5B,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC9C,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAC,YAAY,EAAC,aAAa,CAAC,CAAC;iBAC5C;qBAAM;oBACN,IAAI,CAAC,cAAc,GAAG,kBAAkB,EAAC,IAAI,CAAC,CAAC;iBAC/C;YACF,CAAC,CAAC,CAAC;SACH;aAAM;YACN,IAAI,CAAC,cAAc,GAAG,oBAAoB,EAAC,IAAI,CAAC,CAAC;SACjD;IACF,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,GAAU,EAAC,YAAoB;QAC1C,IAAI,EAAE,GAAC,OAAO,CAAC,YAAY,CAAC;QAC5B,IAAI,EAAE,EAAC;YACN,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC;SACjC;aAAM;YACN,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,IAAa,EAAE,IAAyC,EAAC,YAAoB,EACvF,aAA2B;QAC5B,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAChD,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,YAAY,EAAC,aAAa,CAAC,CAAC;iBAC9C;qBAAM;oBACN,IAAI,CAAC,2BAA2B,EAAC,IAAI,CAAC,CAAC;iBACvC;YACF,CAAC,CAAC,CAAC;SACH;aAAM;YACN,IAAI,CAAC,4BAA4B,EAAC,IAAI,CAAC,CAAC;SACxC;IACF,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,IAAa,EAAC,YAAqB;QAC/C,IAAI,EAAE,GAAE,OAAO,CAAC,YAAY,CAAC;QAC7B,IAAI,EAAE,EAAC;YACN,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAC,YAAY,CAAC,CAAC;SACnC;aAAM;YACN,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IACD,WAAW,CAAC,OAAc,EAAC,aAA2B,EAAC,IAAyC;QAC/F,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,UAAU,CAAC,OAAO,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBACtD,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,OAAO,CAAC,OAAO,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACN,IAAI,CAAC,iCAAiC,EAAC,IAAI,CAAC,CAAC;iBAC7C;YACF,CAAC,CAAC,CAAC;SACH;IACF,CAAC;IACD,GAAG,CAAC,IAAsC,EAAC,aAA4B;QACtE,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,MAAM,CAAC,IAAI,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC/C,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;iBAChC;qBAAM;oBACN,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,kBAAkB,EAAC,IAAI,CAAC,CAAC;iBACrD;YACF,CAAC,CAAC,CAAC;SACH;aAAM;YACN,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,oBAAoB,EAAC,IAAI,CAAC,CAAC;SACvD;IACF,CAAC;IACD,MAAM,CAAC,WAAW,CAAC,IAAS,EAAC,IAAsC,EAAC,aAA4B;QAC/F,IAAI,EAAE,GAAC,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,UAAU,CAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC9C,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,WAAW,CAAC,IAAI,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;iBACxC;qBAAM;oBACN,IAAI,CAAC,kCAAkC,EAAC,IAAI,CAAC,CAAC;iBAC9C;YACF,CAAC,CAAC,CAAA;SACF;aAAM;YACN,IAAI,CAAC,mCAAmC,EAAC,IAAI,CAAC,CAAC;SAC/C;IACF,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,IAAS,EAAC,IAAW,EAAC,IAAsC,EAAC,aAA4B;QACvG,IAAI,EAAE,GAAC,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,UAAU,CAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC9C,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC,IAAI,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;iBACzC;qBAAM;oBACN,IAAI,CAAC,kCAAkC,EAAC,IAAI,CAAC,CAAC;iBAC9C;YACF,CAAC,CAAC,CAAA;SACF;aAAM;YACN,IAAI,CAAC,+BAA+B,EAAC,IAAI,CAAC,CAAC;SAC3C;IACF,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,OAAc,EAAC,aAA2B,EAAC,IAAyC;QAClG,IAAI,EAAE,GAAC,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,UAAU,CAAC,OAAO,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBACtD,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,OAAO,CAAC,OAAO,EAAC,aAAa,EAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACN,IAAI,CAAC,iCAAiC,EAAC,IAAI,CAAC,CAAC;iBAC7C;YACF,CAAC,CAAC,CAAA;SACF;IACC,CAAC;IACJ,MAAM,CAAC,IAAI,CAAC,IAAc,EAAC,IAA0C,EAAC,aAA2B;QAChG,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;QAC3B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAChD,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;iBACjC;qBAAM;oBACN,IAAI,CAAC,0BAA0B,EAAC,IAAI,CAAC,CAAC;iBACtC;YACF,CAAC,CAAC,CAAC;SACH;aAAK;YACL,IAAI,CAAC,uCAAuC,EAAC,IAAI,CAAC,CAAC;SACnD;IACF,CAAC;IACD,MAAM,CAAC,IAAwB,EAAC,aAA4B;QAC3D,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBACvD,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;iBAC1B;qBAAM;oBACN,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,kBAAkB,CAAC,CAAC;iBACnD;YACF,CAAC,CAAC,CAAA;SACF;aAAM;YACN,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,oBAAoB,CAAC,CAAC;SACrD;IACF,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,QAAe,EAAC,MAAY,EAAC,IAAqC,EAC5E,QAAgB,EAAC,YAAoB,EAAC,aAA2B;QAClE,IAAI,EAAE,GAAC,OAAO,CAAC,YAAY,CAAC;QAC5B,IAAI,EAAE,EAAC;YACN,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,EAAC,aAAa,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC3D,IAAI,OAAO,EAAC;oBACX,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAC;iBAClE;qBAAM;oBACN,IAAI,CAAC,eAAe,QAAQ,kBAAkB,EAAC,IAAI,CAAC,CAAC;iBACrD;YACF,CAAC,CAAC,CAAA;SACF;aAAM;YACN,IAAI,CAAC,eAAe,QAAQ,oBAAoB,EAAC,IAAI,CAAC,CAAC;SACvD;IACF,CAAC;IACD,MAAM,CAAC,KAAK,CAAC,QAAe,EAAC,MAAY,EAAC,QAAgB,EAAC,YAAoB;QAC9E,IAAI,EAAE,GAAE,OAAO,CAAC,YAAY,CAAC;QAC7B,IAAI,EAAE,EAAC;YACN,OAAO,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAC,MAAM,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAC;SACvD;aAAM;YACN,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IACD,MAAM,CAAC,aAAa,CAAC,YAAmB,EAAE,YAAmB;QAC5D,IAAI,CAAC,YAAY;YAAE,OAAO,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY;YAAE,OAAO,IAAI,CAAC;QAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAKD,MAAM,KAAK,SAAS,CAAC,IAAqB;QACzC,OAAO,CAAC,UAAU,GAAC,IAAI,CAAC;QACxB,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAChC,OAAO,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IACD,MAAM,KAAK,SAAS;QACnB,OAAO,OAAO,CAAC,UAAU,CAAC;IAC3B,CAAC;IAIO,MAAM,CAAC,qBAAqB;QACnC,OAAO,CAAC,IAAI,GAAC,EAAE,CAAC;QAChB,OAAO,CAAC,MAAM,GAAC,EAAE,CAAC;QAClB,KAAM,IAAI,QAAQ,IAAI,OAAO,CAAC,UAAU,EAAC;YACxC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;SACtD;IACF,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,QAAe;QACpC,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC;QACtB,OAAO,EAAE,CAAC;IACX,CAAC;IACD,MAAM,CAAC,gBAAgB,CAAC,QAAe;QACtC,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IACD,MAAM,CAAC,WAAW;QACjB,OAAO,OAAO,CAAC,MAAM,CAAC;IACvB,CAAC;IACO,MAAM,CAAC,YAAY,CAAC,QAAe;QAC1C,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,EAAE,IAAI,EAAE,CAAC,SAAS,IAAI,EAAE,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,IAAI,QAAQ,IAAI,EAAE,CAAC,SAAS,EAAC;YAC3E,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SACvC;aAAM;YACN,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC;YAC9B,OAAO,QAAQ,CAAC;SAChB;IACF,CAAC;IACO,MAAM,CAAC,cAAc;QAC5B,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,QAAQ,IAAI,OAAO,CAAC,UAAU,EAAC;YACvC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC;SAC1C;IACF,CAAC;IACO,MAAM,CAAC,cAAc,CAAC,SAAS,EAAC,QAAQ;QAC/C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC;YACjB,EAAE,CAAC,SAAS,CAAC,GAAC,EAAE,CAAC;QAClB,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC;QAC7B,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,EAAE,EAAC;YACN,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC;YACtB,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,GAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,CAAC,EAAE,EAAC,QAAQ,CAAC,CAAC;SAClC;IACF,CAAC;;AA7Cc,cAAM,GAAoC,IAAI,CAAC;AC1P/D,MAAM,aAAc,SAAQ,UAAU;IAElC;QACI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;IACtB,CAAC;IAED,GAAG,CAAC,GAAU,EAAE,IAAoC,EAAC,YAAoB,EACjE,aAA2B;QAC/B,IAAI,KAAK,GAAC,IAAI,CAAC;QAEf,IAAI,aAAa,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAC;YACZ,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAC,EAAE,CAAA;YAChC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SAC9C;QACD,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;QACzB,IAAI,GAAG,EAAE;YACL,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAC,GAAG,CAAC,CAAC;YACtC,GAAG,CAAC,UAAU,GAAC,KAAK,CAAC;YACrB,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;SAClB;;YACG,IAAI,CAAC,gBAAgB,GAAC,GAAG,EAAC,IAAI,CAAC,CAAC;IAExC,CAAC;IACD,IAAI,CAAC,GAAU,EAAC,YAAqB;QACjC,IAAI,aAAa,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAC;YACZ,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAC,EAAE,CAAA;YAChC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SAC9C;QACD,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;QACzB,IAAI,GAAG,EAAE;YACL,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAC,GAAG,CAAC,CAAC;YACtC,GAAG,CAAC,UAAU,GAAC,IAAI,CAAC;YACpB,OAAO,GAAG,CAAC;SACd;aAAK;YACF,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IACD,IAAI,CAAC,IAAa,EAAE,IAAsC,EAAC,YAAoB,EACvE,aAA2B;QAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IACO,QAAQ,CAAC,GAAU,EAAC,IAAa,EAAC,IAAc,EAAC,IAAsC,EAAC,YAAoB;QAChH,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;SACnB;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBAC1C,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,YAAY,CAAC,CAAC;iBACpD;YACL,CAAC,EAAC,YAAY,EAAC,IAAI,CAAC,CAAC;SACxB;IACL,CAAC;IACD,OAAO,CAAC,OAAc,EAAC,aAA2B,EAAC,IAAyC;QAExF,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,UAAU,EAAC;YACX,IAAI,IAAI,GAAQ,UAAU,CAAC,OAAO,CAAC,CAAC;YACpC,EAAE,CAAC,GAAG,CAAC,qCAAqC,EAAC,IAAI,CAAC,CAAC;SACtD;IACL,CAAC;IACD,KAAK,CAAC,IAAa,EAAC,YAAqB;QACrC,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;YACf,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC;YACtC,IAAI,GAAG;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,GAAG,CAAC,GAAW,EAAC,IAAsC,EAAE,aAA2B;QAE/E,IAAI,KAAK,GAAC,IAAI,CAAC;QAEf,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,EAAC;YACL,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;YAC3B,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACjC,GAAG,CAAC,IAAI,GAAC,GAAG,CAAC;SAChB;QACD,IAAI,aAAa,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAC;YACZ,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAC,EAAE,CAAA;YAChC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SAC9C;QACD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,UAAU,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAC5B,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,IAAI,CAAC,IAAc,EAAC,IAAyC,EACrD,aAA2B;QAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;IAChD,CAAC;IAEO,QAAQ,CAAC,GAAU,EAAC,IAAc,EAAC,IAAc,EAAC,IAAyC,EAC3F,aAA2B;QAC/B,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAC;YACjB,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;SACnB;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBAC1C,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;iBACrD;YACL,CAAC,EAAC,aAAa,CAAC,CAAA;SACnB;IACL,CAAC;IACD,WAAW,CAAC,IAAS,EAAC,aAA2B,EAAC,IAAsC;QACpF,IAAI,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,EAAC;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAC,EAAE,CAAC;YAC1B,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACvC;QACD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,UAAU,CAAC,EAAE,CAAC,GAAC,EAAE,GAAG,EAAC,EAAE,EAAE,IAAI,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,OAAO,CAAC,IAAS,EAAC,IAAW,EAAC,aAA2B,EAAC,IAAsC;QAC5F,IAAI,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,EAAC;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAC,EAAE,CAAC;YAC1B,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACvC;QACD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,UAAU,CAAC,EAAE,CAAC,GAAC,EAAE,GAAG,EAAC,EAAE,EAAE,IAAI,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,MAAM,CAAC,GAAU,EAAC,IAAwB;QACtC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,EAAE;YAC3B,IAAI,GAAG,EAAE;gBACL,IAAG,IAAI;oBAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;iBAAM;gBACH,IAAI,aAAa,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBACtD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAC/C,IAAI,UAAU,EAAE;oBACZ,IAAI,GAAG,GAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBACvB,UAAU,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC;oBACpB,IAAI,CAAC,GAAG,EAAC;wBACL,IAAI,IAAI;4BAAE,IAAI,CAAC,iBAAiB,GAAC,GAAG,CAAC,CAAC;qBACzC;yBAAM;wBACH,IAAI,IAAI;4BAAE,IAAI,CAAC,IAAI,CAAC,CAAC;qBACxB;iBACJ;qBAAM;oBACH,IAAI,IAAI;wBAAE,IAAI,CAAC,iBAAiB,GAAC,GAAG,CAAC,CAAC;iBACzC;aAEJ;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACD,IAAI,CAAC,QAAe,EAAE,MAAY,EAAC,IAAoD,EAC/E,QAAgB,EAAC,YAAoB,EAAC,aAA2B;QAErE,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,IAAI,GAAU,EAAE,CAAC;QACrB,IAAI,UAAU,EAAC;YACX,KAAK,IAAI,EAAE,IAAI,UAAU,EAAC;gBACtB,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;gBACzB,IAAI,KAAK,GAAC,IAAI,CAAC;gBACf,KAAK,IAAI,KAAK,IAAI,MAAM,EAAC;oBACrB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;oBACzB,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;oBACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC;wBAC1B,KAAK,GAAC,KAAK,CAAC;iBACnB;gBACD,IAAI,KAAK;oBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;aACjC;YACD,IAAI,QAAQ,EAAC;gBACT,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,EAAE,CAAC,CAAC;aACtB;iBAAM;gBACH,IAAI,KAAK,GAAa,EAAE,CAAC;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,IAAc,EAAC,EAAE;oBAC5C,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;gBACzB,CAAC,EAAC,aAAa,CAAC,CAAC;aACpB;SACJ;aAAM;YACH,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,EAAE,CAAC,CAAC;SACtB;IAEL,CAAC;IACD,OAAO,CAAC,IAAe,EAAE,GAAO;QAC5B,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,EAAC,GAAG,CAAC,CAAA;IACpC,CAAC;IACD,KAAK,CAAC,QAAe,EAAC,MAAY,EAAC,YAAqB;QAEpD,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,IAAI,GAAU,EAAE,CAAC;QACrB,IAAI,UAAU,EAAC;YACX,KAAK,IAAI,EAAE,IAAI,UAAU,EAAC;gBACtB,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;gBACzB,IAAI,KAAK,GAAC,IAAI,CAAC;gBACf,KAAK,IAAI,KAAK,IAAI,MAAM,EAAC;oBACrB,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;oBACxB,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;oBACxB,IAAI,CAAC,MAAM,IAAI,MAAM,IAAE,GAAG;wBACtB,KAAK,GAAC,KAAK,CAAC;iBACnB;gBACD,IAAI,KAAK;oBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;aACjC;YACD,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IAEL,CAAC;CACJ;ACjOD,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;AACzC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB,MAAM,eAAgB,SAAQ,UAAU;IAKpC,YAAY,MAAa,EAAC,IAAW,EAAC,MAAa,EAAC,eAAwB;QACxE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;QACnB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAGpC,IAAI,GAAG,GAAG,YAAY,GAAC,MAAM,GAAC,GAAG,GAAC,IAAI,GAAC,QAAQ,CAAC;QAChD,EAAE,CAAC,GAAG,CAAC,aAAa,EAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;QAC1B,WAAW,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,eAAe,EAAE,IAAI,EAAC,kBAAkB,EAAE,IAAI,EAAE,EAAC,CAAC,GAAG,EAAC,EAAE,EAAC,EAAE;YACjF,IAAI,GAAG,EAAC;gBACJ,MAAM,GAAG,CAAC;aACb;YACD,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACzB,IAAI,CAAC,EAAE,GAAC,EAAE,CAAC;YACX,IAAI,eAAe;gBACf,IAAI,CAAC,eAAe,EAAE,CAAC;QAE/B,CAAC,CAAC,CAAA;IACN,CAAC;IACO,eAAe;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,WAAW,EAAC;YACZ,KAAK,IAAI,QAAQ,IAAI,WAAW,EAAC;gBAC7B,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACrC,IAAI,EAAE,EAAC;oBACH,IAAI,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC;oBAC5B,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;wBAC9C,IAAI,GAAG;4BAAE,EAAE,CAAC,GAAG,CAAC,WAAW,GAAC,QAAQ,GAAC,GAAG,EAAC,GAAG,CAAC,CAAC;oBAClD,CAAC,CAAC,CAAA;iBACL;aACJ;SAEJ;IACL,CAAC;IACO,iBAAiB;QACrB,IAAI,IAAI,CAAC,eAAe;YAAE,OAAO;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,WAAW,EAAC;YACZ,IAAI,CAAC,eAAe,GAAC,EAAE,CAAC;YACxB,KAAK,IAAI,QAAQ,IAAI,WAAW,EAAC;gBAC7B,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACrC,IAAI,EAAE,EAAC;oBACH,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;oBACrD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAC,QAAQ,CAAC;oBACxC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;wBACrC,IAAI,GAAG;4BAAE,MAAM,GAAG,CAAC;oBACvB,CAAC,CAAC,CAAA;iBACL;aACJ;SAEJ;IACL,CAAC;IACD,GAAG,CAAC,GAAU,EAAE,IAAoC,EAAC,YAAoB,EAAC,aAA2B;QACjG,IAAI,KAAK,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,GAAG,EAAC;YACL,IAAI,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;YAC1B,OAAO;SACV;QACD,IAAI,aAAa,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,cAAc,GAAU,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;QACvE,IAAI,GAAG,GAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,OAAO,GAAG,EAAE,GAAG,EAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;QAC7C,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,OAAO,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YACtD,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aAClB;iBAAM,IAAI,GAAG,EAAC;gBACX,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;gBACf,IAAI,QAAQ,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,IAAI,GAAW,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;aACnB;iBAAM;gBACH,IAAI,CAAC,qBAAqB,GAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACxC;QACL,CAAC,CAAC,CAAA;IAEN,CAAC;IACD,IAAI,CAAC,IAAa,EAAE,IAAsC,EAAC,YAAoB,EAAC,aAA2B;QACvG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,YAAY,EAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;IACO,QAAQ,CAAC,GAAU,EAAC,IAAa,EAAC,IAAc,EAAC,IAAsC,EAAC,YAAoB,EAAC,aAA2B;QAE5I,IAAI,KAAK,GAAC,IAAI,CAAC;QACf,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;SACnB;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBAC1C,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;oBACtB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,YAAY,EAAC,aAAa,CAAC,CAAC;iBAClE;YACL,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAC;SACjC;IACL,CAAC;IACD,GAAG,CAAC,GAAW,EAAC,IAAsC,EAAC,aAA2B;QAE9E,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,GAAG,EAAC;YAEJ,IAAI,QAAQ,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACjD,IAAI,QAAQ,GAAU,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC5D,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,OAAO,GAAG,EAAE,GAAG,EAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;YAC7C,IAAG;gBACC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,OAAO,EAAC,OAAO,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;oBAC3D,IAAI,GAAG,EAAC;wBACJ,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;qBAClB;yBAAM;wBACH,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;qBAClB;gBACL,CAAC,CAAC,CAAC;aACN;YAAC,OAAO,CAAC,EAAC;gBACP,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAC,IAAI,CAAC,CAAC;aAC3B;SAEJ;aAAM;YAEH,IAAI,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;YACjC,IAAI,QAAQ,GAAU,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YACzD,IAAI,QAAQ,GAAU,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC5D,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,OAAO,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;gBAClD,IAAI,GAAG,EAAE;oBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC;oBAC3B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE,GAAC,GAAG,GAAC,KAAK,CAAC;oBACvC,GAAG,CAAC,UAAU,GAAC,IAAI,CAAC;oBACpB,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;iBAClB;YACL,CAAC,CAAC,CAAA;SACL;IACL,CAAC;IAED,WAAW,CAAC,IAAS,EAAC,aAA2B,EAAC,IAAsC;QAEpF,IAAI;YACA,IAAI,IAAI,GAAG,EAAE,CAAC,YAAY,CAAO,IAAK,CAAC,IAAI,CAAC,CAAC;YAG7C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,GAAU,EAAC,MAAa,EAAC,EAAE;gBAClE,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACtB,IAAI,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;oBACjC,IAAI,GAAG,GAAG,OAAO,GAAC,MAAM,CAAC;oBACzB,IAAI,UAAU,CAAC,MAAM,GAAC,CAAC,EAAC;wBACpB,GAAG,IAAE,GAAG,GAAC,UAAU,CAAC,CAAC,CAAC,CAAC;qBAC1B;oBACD,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAA;iBACjB;YACL,CAAC,CAAC,CAAA;SACL;QAAC,OAAM,CAAC,EAAC,GAAE;IAChB,CAAC;IACD,OAAO,CAAC,IAAS,EAAC,IAAW,EAAC,aAA2B,EAAC,IAAsC;QAC5F,IAAI;YACM,IAAK,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,MAAa,EAAC,EAAE;gBAC5C,IAAI,CAAC,WAAW,CAAC,MAAM,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,QAAe,EAAC,MAAa,EAAC,EAAE;oBACpE,IAAI,QAAQ,EAAC;wBACT,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;qBACvB;yBAAM;wBACH,IAAI,GAAG,GAAC,OAAO,GAAC,MAAM,CAAC;wBACvB,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;qBAClB;gBACL,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAA;SACL;QAAA,OAAM,CAAC,EAAC,GAAE;IACf,CAAC;IACO,WAAW,CAAC,IAAW,EAAC,QAAe,EAAC,QAAe,EAAC,IAAqC;QACjG,IAAI,IAAI,CAAC,MAAM,GAAC,eAAe,CAAC,WAAW,EAAC;YACxC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,GAAU,EAAC,UAAiB,EAAC,EAAE;gBACxE,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,UAAU,EAAC,IAAI,CAAC,CAAC;iBACpE;YACL,CAAC,CAAC,CAAA;SACL;aAAM;YACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,EAAC,IAAI,CAAC,CAAA;SACxD;IACL,CAAC;IACO,cAAc,CAAC,IAAW,EAAC,QAAe,EAAC,QAAe,EAAC,UAAiB,EAAC,IAAqC;QACtH,IAAI,GAAG,GAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,UAAU,GAAgB;YACtB,IAAI,EAAC,QAAQ,EAAE,IAAI,EAAC,QAAQ;YAC5B,QAAQ,EAAC,UAAU;YACnB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC;SAAC,CAAC;QAE5B,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,EAAC,CAAC,GAAU,EAAC,IAAQ,EAAC,EAAE;YAC/D,IAAI,GAAG,EAAC;gBACJ,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aAClB;iBAAM;gBACH,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,MAAM,GAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;gBAC9B,IAAI,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC;aACrB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACD,OAAO,CAAC,OAAc,EAAC,aAA2B,EACtC,IAA6C;QACrD,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,OAAO,CAAC,MAAM,GAAC,CAAC;YAChB,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,EAAE,EAAC,CAAC,GAAU,EAAC,QAAe,EAAC,QAAe,EAAC,OAAgB,EAAC,EAAE;YAEhF,IAAI,GAAG;gBACH,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBACd;gBACD,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACxC,IAAI,QAAQ,GAAgB;oBACxB,IAAI,EAAC,QAAQ;oBACb,IAAI,EAAC,QAAQ;oBACb,IAAI,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC;oBAC5B,IAAI,EAAC,OAAO;iBACf,CAAA;gBACD,IAAI,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC;aACvB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACO,YAAY,CAAC,EAAS,EAAC,IAAwE;QACnG,IAAI,MAAM,GAAG,EAAE,GAAG,EAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;QAC5C,IAAI,GAAG,GAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAC7C,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;aAC5B;iBAAM,IAAI,GAAG,EAAC;gBACX,IAAI,SAAS,GAAU,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;gBACvC,IAAI,GAAG,CAAC,QAAQ,EAAC;oBACb,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAC,CAAC,IAAW,EAAC,GAAU,EAAC,GAAU,EAAC,QAAiB,EAAC,EAAE;wBAClF,IAAI,IAAI;4BACJ,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;6BACzB;4BACD,IAAI,UAAU,GAAY,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;4BACvD,IAAI,CAAC,IAAI,EAAC,GAAG,EAAC,GAAG,EAAC,UAAU,CAAC,CAAC;yBACjC;oBACL,CAAC,CAAC,CAAA;iBACL;qBAAM;oBACH,IAAI,CAAC,IAAI,EAAC,GAAG,CAAC,IAAI,EAAC,GAAG,CAAC,IAAI,EAAC,CAAC,SAAS,CAAC,CAAC,CAAA;iBAC3C;aACJ;iBAAM;gBACH,IAAI,CAAC,qBAAqB,GAAC,EAAE,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAA;aAChD;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAED,IAAI,CAAC,IAAc,EAAC,IAAyC,EAAC,aAA2B;QACrF,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;IAEhD,CAAC;IACO,QAAQ,CAAC,GAAU,EAAC,IAAc,EAAC,IAAc,EAAC,IAAyC,EAAC,aAA2B;QAE3H,IAAI,KAAK,GAAC,IAAI,CAAC;QACf,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EAAC;YACjB,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;SACnB;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBAC1C,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;iBAClB;qBAAM;oBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;oBACtB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,aAAa,CAAC,CAAC;iBACrD;YACL,CAAC,EAAC,IAAI,CAAC,CAAA;SACV;IACL,CAAC;IACD,MAAM,CAAC,GAAU,EAAC,IAAwB;QACtC,IAAI,aAAa,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,QAAQ,GAAU,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;QACjE,IAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,EAAE,GAAG,EAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;QACzC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,OAAO,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAClD,IAAI,GAAG,EAAE;gBACL,IAAI,IAAI;oBAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACvB;iBAAM;gBACH,IAAI,IAAI;oBAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACD,IAAI,CAAC,QAAe,EAAE,MAAY,EAAC,IAAmD,EAC9E,QAAgB,EAAC,YAAoB,EAAC,aAA2B;QACrE,IAAI,QAAQ,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAU,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;QAC5D,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;QAE1D,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,UAAU,EAAC,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAE3F,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;aACvB;iBAAM;gBACH,IAAI,IAAI,GAAY,EAAE,CAAC;gBACvB,KAAK,IAAI,CAAC,IAAI,GAAG,EAAC;oBACd,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;oBACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,IAAI,QAAQ,EAAC;oBACT,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,EAAE,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,KAAK,GAAa,EAAE,CAAC;oBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,IAAc,EAAC,EAAE;wBAC5C,IAAI,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;oBACzB,CAAC,EAAC,aAAa,CAAC,CAAC;iBACpB;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iBAAiB,CAAC,cAAqB,EAAC,EAAQ;QAC5C,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC;IAqCxB,CAAC;;AAzNc,2BAAW,GAAC,OAAO,CAAC;ACtJvC,MAAe,OAAO;IAElB;QACI,IAAI,CAAC,GAAG,GAAC;YACL,UAAU,EAAC,OAAO,CAAC,GAAG,CAAC,UAAU;YACjC,SAAS,EAAC,OAAO,CAAC,GAAG,CAAC,SAAS;YAC/B,gBAAgB,EAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB;YAC7C,SAAS,EAAC,OAAO,CAAC,GAAG,CAAC,SAAS;YAC/B,OAAO,EAAC,OAAO,CAAC,GAAG,CAAC,OAAO;YAC3B,KAAK,EAAC,OAAO,CAAC,GAAG,CAAC,KAAK;SAC1B,CAAA;IACL,CAAC;IAID,UAAU;QACN,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;IACxC,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;IAC9B,CAAC;IAED,gBAAgB;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;IACrC,CAAC;IAED,SAAS;QACL,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;IAC5B,CAAC;IAED,iBAAiB;QACb,EAAE,CAAC,GAAG,CAAC,kBAAkB,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI;YACL,IAAI,GAAC,EAAE,CAAC;;YAER,IAAI,GAAC,YAAY,CAAA;QACrB,EAAE,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IACtF,CAAC;IACD,WAAW;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC1B,CAAC;CACJ;AC/CD,MAAO,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACpC,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC1C,MAAM,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC9C,MAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACzC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAG/B,MAAM,WAAW;IAKb,YAAY,UAAqB,EAAC,GAAW;QAgWrC,iBAAY,GAA2B,CAAC,GAAW,EAAC,EAAE,GAAE,OAAO,GAAG,CAAC,CAAA,CAAC,CAAA;QA/VxE,IAAI,CAAC,UAAU,GAAC,UAAU,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IACD,YAAY,CAAC,KAAS;QAClB,IAAI,IAAI,GAAO,EAAE,CAAC;QAClB,KAAM,IAAI,GAAG,IAAI,KAAK,EAAC;YACnB,IAAI,GAAG,IAAE,UAAU,EAAC;gBAChB,IAAI,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,GAAG,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAwB7B;iBAAM;gBACH,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;aAChC;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,UAAU,CAAC,GAAU;QACzB,IAAI,IAAI,GAAuB,EAAE,CAAC;QAClC,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;QACxC,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,KAAK,CAAC,MAAM,GAAC,CAAC,EAAC;YACf,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,QAAQ,CAAC,GAAU;QACvB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAE,CAAC,EAAC;YACpB,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;SACxC;aAAM,IAAI,GAAG,IAAE,MAAM,EAAC;YACnB,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,GAAG,IAAE,OAAO,EAAC;YACpB,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC/B;IACL,CAAC;IACO,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI;QAC7B,IAAI,OAAO,GAAU,GAAG,GAAG,CAAC,MAAM,MAAM,GAAG,CAAC,QAAQ,MAAM,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,WAAW,IAAI,CAAC;QAC7F,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChB,IAAI,EAAE,CAAC;IACX,CAAC;IACO,OAAO,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI;QACxB,GAAG,CAAC,GAAG,CAAC,eAAe,EAAC,kBAAkB,CAAC,CAAC;QAC5C,IAAI,EAAE,CAAC;IACX,CAAC;IACO,WAAW;QACf,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QAErB,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAC,KAAK,EAAE,KAAK,EAAC,MAAM,EAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,MAAM,EAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;QAE7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAG1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YACxB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAA;QAElC,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAKlC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;gBAChC,IAAI,OAAO,EAAC;oBACR,EAAE,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;wBAClC,IAAI,GAAG,EAAC;4BACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;yBAC1B;6BAAM;4BACH,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;4BACnC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;4BACvB,IAAI,EAAE,GAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;4BAC1B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAC5B;oBACL,CAAC,EAAC,KAAK,EAAC,EAAE,CAAC,CAAA;iBACd;YACL,CAAC,CAAC,CAAA;QAEN,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAElC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACpB,IAAI,IAAI,GAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YAElC,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;gBAClC,IAAI,OAAO,EAAC;oBACR,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,GAAU,EAAC,IAAc,EAAC,EAAE;wBACtC,IAAI,GAAG,EAAC;4BACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC9B;6BAAM;4BACH,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;gCACf,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gCAClB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gCACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;6BAC5B;4BACD,IAAI,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;4BAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAC5B;oBACL,CAAC,EAAC,KAAK,EAAC,EAAE,CAAC,CAAA;iBACd;YACL,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAEnC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;YAGjB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;YACtB,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEpC,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAU,EAAC,MAAc,EAAC,EAAE;gBACjC,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;iBACzB;qBAAM;oBACH,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACxB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC3B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC5B;YACL,CAAC,EAAC,EAAE,CAAC,CAAA;QACT,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YACnC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YACxB,IAAI,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC;YAC/B,IAAI,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC;YACxB,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,GAAU,EAAC,EAAE;gBAC1C,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;iBACzB;qBAAM;oBACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC5B;YACL,CAAC,EAAC,EAAE,CAAC,CAAA;YACL,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAElC,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YAGxB,IAAI,OAAO,GAAa,EAAE,CAAC;YAC3B,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAC;gBACnB,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;gBAClC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB;YAED,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;gBACrC,IAAI,OAAO,EAAC;oBACR,EAAE,CAAC,IAAI,CAAC,OAAO,EAAC,CAAC,GAAU,EAAC,OAAiB,EAAC,EAAE;wBAC5C,IAAI,GAAG,EAAC;4BACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;yBACzB;6BAAM;4BACH,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,KAAK,IAAI,CAAC,IAAI,OAAO,EAAC;gCAClB,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gCACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;6BAC3B;4BACD,IAAI,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;4BAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAC5B;oBACL,CAAC,EAAC,EAAE,CAAC,CAAA;iBACR;YACL,CAAC,CAAC,CAAA;QAEN,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAEnC,IAAI,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAG7D,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,IAAI,QAAQ,GAAC,KAAK,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAC;gBACnB,QAAQ,GAAC,IAAI,CAAC;aACjB;YACD,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3C,EAAE,CAAC,OAAO,CAAC,cAAc,EAAQ,WAAW,EAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;gBAC/D,IAAI,OAAO,EAAC;oBACR,EAAE,CAAC,IAAI,CAAC,cAAc,EAAQ,WAAW,EAAC,CAAC,GAAU,EAAC,IAAa,EAAC,IAAc,EAAC,EAAE;wBACjF,IAAI,YAAY,GAAG,UAAU,CAAC,aAAa,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;wBACjE,IAAI,GAAG,EAAC;4BACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;yBACzB;6BAAM;4BACH,IAAI,IAAI,GAAG,EAAC,IAAI,EAAC,YAAY,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC;4BAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;4BAC9B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAC5B;oBACL,CAAC,EAAC,QAAQ,EAAC,KAAK,EAAC,EAAE,CAAC,CAAA;iBACvB;qBAAM;oBACH,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,0BAA0B,CAAC,CAAC;iBAChD;YACL,CAAC,CAAC,CAAA;QAEN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAC7B,IAAI,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC;YAC/B,IAAI,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC;YACxB,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;YAC9B,EAAE,CAAC,eAAe,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;gBACvF,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;iBACzB;qBAAM;oBACH,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;oBACzB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBAClC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAChC;YACL,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAC9B,IAAI,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC;YAC/B,IAAI,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,EAAE,CAAC,gBAAgB,CAAC,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,EAAC,CAAC,GAAU,EAAC,EAAE;gBACzD,IAAI,GAAG,EAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;iBACzB;qBAAM;oBACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClC;YACL,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YACjC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;YACzB,EAAE,CAAC,GAAG,CAAC,UAAU,EAAC,GAAG,CAAC,CAAC;YACvB,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;gBACpC,IAAI,OAAO,EAAC;oBACR,EAAE,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,EAAC,CAAC,GAAU,EAAC,IAAiB,EAAC,EAAE;wBAC9C,IAAI,GAAG,EAAC;4BACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;yBACzB;6BAAM;4BACH,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;4BACrB,GAAG,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBACvD;oBACL,CAAC,CAAC,CAAA;iBACL;YACL,CAAC,CAAC,CAAA;QAEN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAC7B,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,CAAA;YACxC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,GAAG,EAAC,MAAM,EAAC,KAAK,EAAC,EAAE;gBAC/B,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;gBACxB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;gBACtB,IAAI,KAAK,EAAC;oBACN,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;oBACpC,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,IAAI,KAAK,CAAC,IAAI,EAAC;wBACX,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;qBACrB;yBAAM;wBACH,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;qBACrB;oBACD,IAAI,IAAI,EAAC;wBACL,EAAE,CAAC,UAAU,CAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;4BAChC,IAAI,OAAO,EAAC;gCACR,EAAE,CAAC,WAAW,CAAC,IAAI,EAAC,EAAE,EAAC,CAAC,GAAU,EAAC,OAAc,EAAC,EAAE;oCAChD,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;gCAClC,CAAC,CAAC,CAAA;6BACL;iCAAM;gCACH,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,gCAAgC,CAAC,CAAA;6BACrD;wBACL,CAAC,CAAC,CAAA;qBAEL;yBAAM;wBACH,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,mCAAmC,CAAC,CAAA;qBACxD;iBACJ;qBAAO;oBACJ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,kBAAkB,CAAC,CAAC;iBACxC;YACL,CAAC,CAAC,CAAA;QAEN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAExC,IAAI,KAAK,GAAY,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE/C,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YACpC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAC,EAAE,EAAC,CAAC,OAAe,EAAC,EAAE;gBACnC,IAAI,OAAO,EAAC;oBACR,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,EAAE;wBACxB,IAAI,GAAG;4BACH,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;6BACtB;4BACA,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;yBAC1B;oBACL,CAAC,CAAC,CAAA;iBACL;YACL,CAAC,CAAC,CAAA;QAGN,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAC7B,IAAI,KAAK,GAAY,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,IAAI,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAE,GAAG,EAAC;gBACb,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC5B;YACD,IAAI,IAAI,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAIlB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC;IACrD,CAAC;IACO,OAAO,CAAC,GAAG,EAAC,GAAU;QAC1B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEO,WAAW,CAAC,IAAY;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,SAAS,CAAC,cAAqC;QAC/C,IAAI,CAAC,YAAY,GAAC,cAAc,CAAC;IACrC,CAAC;IAED,GAAG,CAAC,OAAc,EAAC,OAAuB;QACtC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IACD,IAAI,CAAC,OAAc,EAAC,OAAuB;QACvC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IACD,MAAM,CAAC,UAAU;QACb,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,WAAW,EAAC;YACZ,IAAI,IAAI,GAAG;gBACP,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,WAAW,MAAM,CAAC;gBAC1C,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,WAAW,MAAM,CAAC;aAC9C,CAAA;YACD,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjD,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAC,GAAE,EAAE;gBAC3B,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAA;SACL;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC/B;IAEL,CAAC;CACJ;AC5YD,MAAM,OAAQ,SAAQ,OAAO;IAK1B,YAAY,IAAQ;QACjB,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,QAAQ,EAAC;YACf,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,KAAK,EAAC;YACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,KAAK,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,KAAK,EAAC;YACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,KAAK,CAAC;SACzB;IACJ,CAAC;IACD,WAAW,KAAY,OAAO,GAAG,CAAC,CAAA,CAAC;IACnC,YAAY;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC1B,CAAC;IACD,YAAY,CAAC,MAAc;QACxB,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAC;YAC3B,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,WAAW;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IACzB,CAAC;IACD,WAAW,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAC;YAC1B,IAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,QAAQ;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACtB,CAAC;IACD,QAAQ,CAAC,MAAc;QACpB,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAC;YACvB,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;YACnB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,QAAQ;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACtB,CAAC;IACD,QAAQ,CAAC,MAAc;QACpB,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAC;YACvB,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;YACnB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,GAAU,EAAC,IAAmC,EAAC,YAAqB,EAAC,aAA4B;QACzG,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,GAAG,GAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC;YAAA,OAAM;SAAC;QAC9F,KAAK,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;YACtC,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAS,IAAI,CAAC,CAAC;aAC1B;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,GAAU,EAAC,YAAqB;QACzC,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,EAAE,CAAC,GAAG,CAAC,gBAAgB,GAAC,GAAG,GAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC;YAAC,OAAO,IAAI,CAAA;SAAC;QACtG,OAAe,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,IAAa,EAAC,IAAqC,EAAC,YAAqB,EAAC,aAA4B;QAC/G,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;YACzB,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAA;YACb,OAAM;SACR;QACD,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,kBAAkB,EAAC,IAAI,CAAC,CAAC;YAAC,OAAM;SAAC;QACpG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,GAAU,EAAC,IAAc,EAAC,EAAE;YAC1C,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAW,IAAI,CAAC,CAAC;aAC5B;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM;QACH,IAAI,IAAI,GAAO,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAA;QACnB,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC;IACf,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,SAAqB,EAAC,QAAoB,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QAChK,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,SAAS,EAAC,SAAS,EAAE,QAAQ,EAAC,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IACjH,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,SAAqB,EAAC,QAAoB,EAAC,QAAiB,EAAC,YAAqB;QAC9F,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,SAAS,EAAC,SAAS,EAAE,QAAQ,EAAC,QAAQ,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IACtG,CAAC;CACH;AC1GD,MAAM,MAAO,SAAQ,OAAO;IAC1B,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAC7C,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE,CAAA;SACtD;IACH,CAAC;IAED,cAAc,CAAC,eAAwB,KAAK;QAC1C,IAAI,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;SACrD;QACD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAA;IAC3B,CAAC;IAED,MAAM,CAAC,UAAU;QACf,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;CACF;ACjBD,MAAM,KAAM,SAAQ,OAAO;IAMxB,YAAY,IAAQ;QACjB,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,CAAC,QAAQ,EAAC;YACf,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,WAAW,EAAC;YAClB,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,WAAW,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,KAAK,EAAC;YACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,KAAK,CAAC;SACzB;aAAM;YACJ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;SACnB;QACD,IAAI,IAAI,CAAC,cAAc,EAAC;YACrB,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC,cAAc,CAAC;SAC3C;aAAM;YACJ,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,WAAW,EAAC;YAClB,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,WAAW,CAAC;SACrC;aAAM;YACJ,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;SACzB;IACJ,CAAC;IACD,WAAW,KAAY,OAAO,GAAG,CAAC,CAAA,CAAC;IACnC,WAAW;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IACzB,CAAC;IACD,WAAW,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAC;YAC1B,IAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,cAAc;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC5B,CAAC;IACD,cAAc,CAAC,MAAc;QAC1B,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAC;YAC7B,IAAI,CAAC,YAAY,GAAC,MAAM,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,QAAQ;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACtB,CAAC;IACD,QAAQ,CAAC,MAAc;QACpB,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAC;YACvB,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;YACnB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,iBAAiB;QACd,OAAO,IAAI,CAAC,eAAe,CAAC;IAC/B,CAAC;IACD,iBAAiB,CAAC,MAAc;QAC7B,IAAI,IAAI,CAAC,eAAe,IAAI,MAAM,EAAC;YAChC,IAAI,CAAC,eAAe,GAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,cAAc;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC5B,CAAC;IACD,cAAc,CAAC,MAAc;QAC1B,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAC;YAC7B,IAAI,CAAC,YAAY,GAAC,MAAM,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,GAAU,EAAC,IAAiC,EAAC,YAAqB,EAAC,aAA4B;QACvG,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,GAAG,GAAC,eAAe,EAAC,IAAI,CAAC,CAAC;YAAA,OAAM;SAAC;QAC5F,KAAK,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;YACtC,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAO,IAAI,CAAC,CAAC;aACxB;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,GAAU,EAAC,YAAqB;QACzC,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,EAAE,CAAC,GAAG,CAAC,gBAAgB,GAAC,GAAG,GAAC,eAAe,EAAC,IAAI,CAAC,CAAC;YAAC,OAAO,IAAI,CAAA;SAAC;QACpG,OAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,IAAa,EAAC,IAAmC,EAAC,YAAqB,EAAC,aAA4B;QAC7G,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;YACzB,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAA;YACb,OAAM;SACR;QACD,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC;YAAC,OAAM;SAAC;QAClG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,GAAU,EAAC,IAAc,EAAC,EAAE;YAC1C,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAS,IAAI,CAAC,CAAC;aAC1B;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM;QACH,IAAI,IAAI,GAAO,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAA;QACnB,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC;IACf,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAoB,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QAC1I,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAC5F,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,QAAoB,EAAC,QAAiB,EAAC,YAAqB;QACxE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IACjF,CAAC;CACH;AC/HD,MAAM,IAAK,SAAQ,KAAK;IAEtB,MAAM,CAAC,OAAO,CAAC,IAAY,EACzB,IAAuC;QACvC,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,IAAU,EAAE,EAAE;YACtC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAA;IACJ,CAAC;IAGD,MAAM,CAAC,QAAQ;QACb,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;CACF;ACdD,MAAM,OAAQ,SAAQ,OAAO;IAK1B,YAAY,IAAQ;QACjB,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,CAAC,MAAM,EAAC;YACb,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,MAAM,CAAC;SAC3B;aAAM;YACJ,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,YAAY,EAAC;YACnB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,YAAY,CAAC;SACvC;aAAM;YACJ,IAAI,CAAC,aAAa,GAAC,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,QAAQ,EAAC;YACf,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,iBAAiB,EAAC;YACxB,IAAI,CAAC,kBAAkB,GAAC,IAAI,CAAC,iBAAiB,CAAC;SACjD;IACJ,CAAC;IACD,WAAW,KAAY,OAAO,IAAI,CAAC,CAAA,CAAC;IACpC,SAAS;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;IACvB,CAAC;IACD,SAAS,CAAC,MAAc;QACrB,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,EAAC;YACxB,IAAI,CAAC,OAAO,GAAC,MAAM,CAAC;YACpB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,eAAe;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC;IAC7B,CAAC;IACD,eAAe,CAAC,MAAc;QAC3B,IAAI,IAAI,CAAC,aAAa,IAAI,MAAM,EAAC;YAC9B,IAAI,CAAC,aAAa,GAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,WAAW;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IACzB,CAAC;IACD,WAAW,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAC;YAC1B,IAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,oBAAoB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IAClC,CAAC;IACD,oBAAoB,CAAC,MAAc;QAChC,IAAI,IAAI,CAAC,kBAAkB,IAAI,MAAM,EAAC;YACnC,IAAI,CAAC,kBAAkB,GAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,GAAU,EAAC,IAAmC,EAAC,YAAqB,EAAC,aAA4B;QACzG,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,GAAG,GAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC;YAAA,OAAM;SAAC;QAC/F,KAAK,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;YACtC,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAS,IAAI,CAAC,CAAC;aAC1B;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,GAAU,EAAC,YAAqB;QACzC,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAC,EAAE,CAAC,EAAC;YAAE,EAAE,CAAC,GAAG,CAAC,gBAAgB,GAAC,GAAG,GAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC;YAAC,OAAO,IAAI,CAAA;SAAC;QACvG,OAAe,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,IAAa,EAAC,IAAqC,EAAC,YAAqB,EAAC,aAA4B;QAC/G,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;YACzB,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAA;YACb,OAAM;SACR;QACD,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,kBAAkB,EAAC,IAAI,CAAC,CAAC;YAAC,OAAM;SAAC;QACrG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,GAAU,EAAC,IAAc,EAAC,EAAE;YAC1C,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAW,IAAI,CAAC,CAAC;aAC5B;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM;QACH,IAAI,IAAI,GAAO,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAA;QACnB,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC;QACd,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACnD,OAAO,IAAI,CAAC;IACf,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,MAAa,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QACrI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IACzF,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,MAAa,EAAC,QAAiB,EAAC,YAAqB;QACnE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IAC9E,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,YAAwB,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QAChJ,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,YAAY,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IACrG,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,YAAwB,EAAC,QAAiB,EAAC,YAAqB;QAC9E,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,YAAY,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IAC1F,CAAC;CACH;ACxHD,MAAM,MAAO,SAAQ,OAAO;CAE3B;ACFD,MAAM,UAAW,SAAQ,OAAO;IAM7B,YAAY,IAAQ;QACjB,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,IAAI,EAAC;YACX,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC;SACvB;aAAM;YACJ,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC;SACf;QACD,IAAI,IAAI,CAAC,MAAM,EAAC;YACb,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,MAAM,CAAC;SAC3B;aAAM;YACJ,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;SACpB;QACD,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC,kBAAkB,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC,kBAAkB,CAAC;IACpD,CAAC;IACD,WAAW,KAAY,OAAO,IAAI,CAAC,CAAA,CAAC;IACpC,YAAY;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC1B,CAAC;IACD,YAAY,CAAC,MAAc;QACxB,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAC;YAC3B,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,OAAO;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACrB,CAAC;IACD,OAAO,CAAC,MAAc;QACnB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAC;YACtB,IAAI,CAAC,KAAK,GAAC,MAAM,CAAC;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,SAAS;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;IACvB,CAAC;IACD,SAAS,CAAC,MAAc;QACrB,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,EAAC;YACxB,IAAI,CAAC,OAAO,GAAC,MAAM,CAAC;YACpB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,qBAAqB;QAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACnC,CAAC;IACD,qBAAqB,CAAC,MAAe;QAClC,IAAI,IAAI,CAAC,mBAAmB,IAAI,MAAM,EAAC;YACpC,IAAI,CAAC,mBAAmB,GAAC,MAAM,CAAC;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,qBAAqB;QAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACnC,CAAC;IACD,qBAAqB,CAAC,MAAe;QAClC,IAAI,IAAI,CAAC,mBAAmB,IAAI,MAAM,EAAC;YACpC,IAAI,CAAC,mBAAmB,GAAC,MAAM,CAAC;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,MAAM;QACH,IAAI,IAAI,GAAO,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC;QACd,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACrD,OAAO,IAAI,CAAC;IACf,CAAC;CACH;AChFD,MAAM,SAAU,SAAQ,UAAU;CAGjC;ACFD,MAAM,KAAM,SAAQ,OAAO;IAQxB,YAAY,IAAQ;QACjB,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,CAAC,IAAI,EAAC;YACX,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC;SACvB;aAAM;YACJ,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;SAClB;QACD,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,IAAI,CAAC,IAAI,EAAC;YACX,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC;SACjC;aAAM;YACJ,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,OAAO,EAAC;YACd,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC;SAC7B;aAAM;YACJ,IAAI,CAAC,QAAQ,GAAC,CAAC,CAAC;SAClB;QACD,IAAI,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,UAAU,EAAC;YACjB,IAAI,CAAC,WAAW,GAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC,CAAC;SAC9E;aAAM;YACJ,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;SACtB;IACJ,CAAC;IACD,WAAW,KAAY,OAAO,GAAG,CAAC,CAAA,CAAC;IACnC,OAAO;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACrB,CAAC;IACD,OAAO,CAAC,MAAc;QACnB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAC;YACtB,IAAI,CAAC,KAAK,GAAC,MAAM,CAAC;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,WAAW;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IACzB,CAAC;IACD,WAAW,CAAC,MAAe;QACxB,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAC;YAC1B,IAAI,CAAC,SAAS,GAAC,MAAM,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,OAAO;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACrB,CAAC;IACD,OAAO,CAAC,MAAc;QACnB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAC;YACtB,IAAI,CAAC,KAAK,GAAC,MAAM,CAAC;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,YAAY;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC1B,CAAC;IACD,YAAY,CAAC,MAAc;QACxB,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAC;YAC3B,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,UAAU;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACxB,CAAC;IACD,UAAU,CAAC,MAAc;QACtB,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAC;YACzB,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC;YACrB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,YAAY;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC1B,CAAC;IACD,YAAY,CAAC,MAAc;QACxB,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAC;YAC3B,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;SACf;IACJ,CAAC;IACD,aAAa;QACV,IAAI,GAAG,GAAe,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAC;YAC5B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,GAAG,CAAC;IACd,CAAC;IACD,aAAa,CAAC,GAAgB;QAC3B,IAAI,GAAG,GAAe,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,IAAI,GAAG,EAAC;YACf,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAC,IAAI,CAAC;SACrB;QACD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,GAAU,EAAC,IAAiC,EAAC,YAAqB,EAAC,aAA4B;QACvG,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,GAAG,GAAC,eAAe,EAAC,IAAI,CAAC,CAAC;YAAA,OAAM;SAAC;QAC5F,KAAK,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAU,EAAC,IAAY,EAAC,EAAE;YACtC,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAO,IAAI,CAAC,CAAC;aACxB;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,GAAU,EAAC,YAAqB;QACzC,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,EAAE,CAAC,GAAG,CAAC,gBAAgB,GAAC,GAAG,GAAC,eAAe,EAAC,IAAI,CAAC,CAAC;YAAC,OAAO,IAAI,CAAA;SAAC;QACpG,OAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,MAAM,CAAC,IAAI,CAAC,IAAa,EAAC,IAAmC,EAAC,YAAqB,EAAC,aAA4B;QAC7G,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;YACzB,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAA;YACb,OAAM;SACR;QACD,IAAI,EAAE,GAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,CAAC,EAAC;YAAE,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,CAAC,CAAC,GAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC;YAAC,OAAM;SAAC;QAClG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,GAAU,EAAC,IAAc,EAAC,EAAE;YAC1C,IAAI,GAAG,EAAC;gBACL,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACJ,IAAI,CAAC,IAAI,EAAS,IAAI,CAAC,CAAC;aAC1B;QACJ,CAAC,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAChC,CAAC;IACD,MAAM;QACH,IAAI,IAAI,GAAO,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAA;QACnB,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;QACnB,IAAI,cAAc,GAAC,IAAI,CAAC,aAAa,EAAE,CAAA;QACvC,KAAK,IAAI,CAAC,IAAI,cAAc,EAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;SACrD;QACD,OAAO,IAAI,CAAC;IACf,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAgB,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QACtI,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,IAAI,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IACpF,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,IAAgB,EAAC,QAAiB,EAAC,YAAqB;QACpE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IACzE,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAgB,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QACtI,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAC5F,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,QAAgB,EAAC,QAAiB,EAAC,YAAqB;QACpE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IACjF,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,SAAqB,EAAC,IAAqC,EAAC,QAAiB,EAAC,YAAqB,EAAC,aAA4B;QAChJ,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,SAAS,EAAC,SAAS,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAC,aAAa,CAAC,CAAA;IAC9F,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,SAAqB,EAAC,QAAiB,EAAC,YAAqB;QAC9E,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,IAAI,CAAC,EAAC,SAAS,EAAC,SAAS,EAAE,CAAC,EAAC,QAAQ,EAAC,YAAY,CAAC,CAAA;IACnF,CAAC;CACH;ACzLD,MAAM,IAAK,SAAQ,KAAK;CAEvB;ACED,SAAS,KAAK,CAAC,YAAmB,EAAC,IAAQ;IACxC,IAAI,IAAI,GAAQ,IAAI,CAAC,GAAG,CAAC;IACzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,EAAC,IAAI,CAAC,EAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAC,YAAY,GAAC,OAAO,GAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAA;KACb;IACD,IAAI,CAAC,IAAI,EAAC;QACP,IAAI,GAAC,YAAY,CAAC;KACpB;IACD,QAAO,IAAI,EAAC;QAET,KAAK,GAAG;YACL,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,KAAK,GAAG;YACL,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,KAAK,IAAI;YACN,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,KAAK,GAAG;YACL,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,KAAK,IAAI;YACN,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9B;YACG,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAC,IAAI,GAAC,KAAK,EAAC,IAAI,CAAC,CAAC;YACjD,OAAO,IAAI,CAAA;KAEhB;IACD,OAAO,IAAI,CAAC;AACf,CAAC;AACD,OAAO,CAAC,IAAI,GAAC,KAAK,CAAC;AACnB,SAAS,SAAS,CAAC,YAAmB,EAAC,IAAU,EAAC,MAAc;IAC7D,IAAI,IAAI,GAAa,EAAE,CAAC;IACxB,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;QAChB,IAAI,GAAG,GAAW,KAAK,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,GAAG,CAAC,MAAM,GAAC,MAAM,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACjB;IACD,OAAO,IAAI,CAAC;AACf,CAAC;AACD,OAAO,CAAC,QAAQ,GAAC,SAAS,CAAC;AAC3B,SAAS,SAAS,CAAC,YAAmB,EAAC,IAAQ,EAAC,MAAc;IAC3D,IAAI,IAAI,GAAsB,EAAE,CAAC;IACjC,KAAK,IAAI,CAAC,IAAI,IAAI,EAAC;QAChB,IAAI,GAAG,GAAW,KAAK,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,GAAG,CAAC,MAAM,GAAC,MAAM,CAAC;QAClB,IAAI,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;KACd;IACD,OAAO,IAAI,CAAC;AACf,CAAC;AACD,OAAO,CAAC,QAAQ,GAAC,SAAS,CAAC;AAE3B,OAAO,CAAC,SAAS,GAAC;IACf,GAAG,EAAC,EAAE,WAAW,EAAC,MAAM,EAAC,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,IAAI;QAClD,MAAM,EAAE;YACL,QAAQ,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACrD,WAAW,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACxD,KAAK,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YAClD,cAAc,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YAC3D,WAAW,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;SAC1D;KACH;IACD,GAAG,EAAC,EAAE,WAAW,EAAC,QAAQ,EAAC,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,IAAI;QACpD,MAAM,EAAE;YACL,SAAS,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACtD,QAAQ,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACrD,KAAK,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YAClD,KAAK,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;SACpD;KACH;IACD,IAAI,EAAC,EAAE,WAAW,EAAC,QAAQ,EAAC,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,IAAI;QACrD,MAAM,EAAE;YACL,MAAM,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACnD,YAAY,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACzD,QAAQ,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACrD,iBAAiB,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;SAChE;KACH;IACD,GAAG,EAAC,EAAE,WAAW,EAAC,MAAM,EAAC,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,IAAI;QAClD,MAAM,EAAE;YACL,IAAI,EAAC,EAAE,IAAI,EAAC,MAAM,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YAC/C,QAAQ,EAAC,EAAE,IAAI,EAAC,SAAS,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACtD,IAAI,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACjD,SAAS,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACtD,OAAO,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACpD,SAAS,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACtD,UAAU,EAAC,EAAE,IAAI,EAAC,WAAW,EAAE,MAAM,EAAC,IAAI,EAAE,MAAM,EAAC,KAAK,EAAC;SAC3D;KACH;IACD,IAAI,EAAC,EAAE,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,KAAK;QACzD,MAAM,EAAE;YACL,SAAS,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACtD,IAAI,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACjD,MAAM,EAAC,EAAE,IAAI,EAAC,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YACnD,kBAAkB,EAAC,EAAE,IAAI,EAAC,SAAS,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;YAChE,kBAAkB,EAAC,EAAE,IAAI,EAAC,SAAS,EAAE,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,KAAK,EAAC;SAClE;KACH;CACH,CAAA;ACpGD,MAAM,cAAe,SAAQ,OAAO;IAClC,SAAS;QACP,OAAO;;;;;;;;;;;;;;;;OAgBJ,CAAA;IACL,CAAC;IACD,QAAQ,CAAC,IAAY,EAAE,QAAgB;QACrC,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC1B,CAAC;IACD,UAAU;QACR,OAAO,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,MAAM,CAAC,CAAC;IACrD,CAAC;IACD,OAAO,KAAa,OAAO,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;IACvD,gBAAgB,KAAa,OAAO,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;IACjE,SAAS,KAAa,OAAO,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;IACzD,SAAS,KAAa,OAAO,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;CAC/E;AC5BD,MAAM,gBAAiB,SAAQ,aAAa;IAC1C,YAAY,UAAsB,EAAE,WAAW,GAAG,IAAI,aAAa,EAAE;QACnE,KAAK,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IACjC,CAAC;IACD,QAAQ,CAAC,GAAW,EAAE,aAA4B,EAAE,IAAgC;QAClF,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,aAAa,EAAE,IAAgC;QAC3E,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IACD,QAAQ,CAAC,GAAY,EAAE,aAA4B,EAAE,IAAgC;QACnF,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IAED,YAAY,CAAC,aAA4B,EAAE,IAAgC;QACzE,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IACD,WAAW,CAAC,GAAW,EAAE,aAA4B,EAAE,IAAgC;QACrF,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IACD,SAAS,CAAC,QAAgB,EAAE,MAAa,EAAE,aAA4B,EAAE,IAAgC;QACvG,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;CACF;AAED,MAAM,aAAc,SAAQ,WAAW;IACrC,KAAK,CAAC,QAAgB,EAAE,QAAgB,EAAE,IAA0C,EAClF,aAA4B;QAC5B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnB,CAAC;IAED,UAAU,CAAC,aAA6B;QACtC,OAAO,WAAW,CAAC;IACrB,CAAC;CAEF;ACnCD,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAE3B,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;AAC/B,IAAI,UAAU,GAAG,IAAI,eAAe,CAClC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS,EAAE,EAC9E,GAAG,CAAC,SAAS,EAAE,EACf,GAAG,CAAC,OAAO,EAAE,EACb,KAAK,CACN,CAAC;AACF,IAAI,aAAa,GAAG,IAAI,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACrD,UAAU,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;AAE3C,IAAI,GAAG,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAE3C,GAAG,CAAC,iBAAiB,EAAE,CAAC;AACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC","file":"server.js","sourcesContent":["\nclass ServerContext{\n    request:any;\n    response:any;\n    isLogin:boolean;\n    constructor(request,response){\n        this.request=request;\n        this.response=response;\n        this.isLogin=false;\n    }\n    setUserKey(userKey:string){\n        this.response.cookie(\"currentUserKey\",userKey);\n    }\n    getUserKey():string {\n        let key = this.request.cookies[\"currentUserKey\"];\n        return key;\n    }\n}","/**\n* The DB module contains some basic debugging aids. In particular\n* it provides mechanisms for writing outputs to the console log so that they appear in \n* a nested outline.\n*/\nmodule DB {\n    function quiet():boolean{\n        try {\n            if (process.env.DB==\"quiet\")\n                return true;\n        } catch (e){\n            return false;\n        }\n        return false;\n    }\n    var level = 0;\n    /**\n    * This will open a new level of indentation\n    * @param message is the message to be output with the level header\n    * @param obj an optional object that will be provided with the header.\n    * In many browsers this object can be opened and explored in depth by the debugger.\n    */\n    export function start(message: string, obj?: any) {\n        if (quiet()) return\n        if (dbon) {\n            msg(\">\" + message, obj);\n            level++;\n        }\n    }\n    /**\n    * This will output a message at the current level of indentation\n    * @param message is the message to be output \n    * @param obj an optional object that will be provided with the message.\n    * In many browsers this object can be opened and explored in depth by the debugger.\n    */\n    export function end(message: string, obj?: any) {\n        if (quiet()) return\n        if (dbon) {\n            level--;\n            if (level < 0)\n                level = 0;\n            msg(\"<\" + message, obj);\n        }\n\n    }\n    var dbop:boolean=false;\n    export function dbOnPage(db:boolean){\n        dbop=db;\n    }\n    /**\n    * This will close a level of indentation\n    * @param message is the message to be output with the level footer\n    * @param obj an optional object that will be provided with the footer.\n    * In many browsers this object can be opened and explored in depth by the debugger.\n    */\n    export function msg(message: string, obj?: any) {\n        if (quiet()) return\n        if (dbon) {\n            var pre = \"\";\n            for (var i = 0; i < level; i++) {\n                pre += \"   \";\n            }\n            if (obj)\n                console.log(pre + message, obj);\n            else\n                console.log(pre + message);\n            if (dbop){\n                let span = document.createElement(\"div\");\n                span.innerHTML=pre+message;\n                span.style.cssText=\"width:100%\";\n                let dbout = document.getElementById(\"dbout\");\n                if (dbout)\n                    dbout.append(span);\n            }\n        }\n    }\n\n    export function stackTrace(message: string) {\n        if (quiet()) return\n        try {\n            throw new Error(message);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    var dbon: boolean = true;\n    /**\n    * turns on debugging messages\n    */\n    export function on(msg: string) {\n        dbon = true;\n        start(\"+++\" + msg);\n    }\n    /**\n    * turns off debugging messages\n    */\n    export function off(msg: string) {\n        end(\"---\" + msg);\n        dbon = false;\n    }\n    var dbCounts = {};\n    export function count(name:string) {\n    \tlet count = dbCounts[name];\n    \tif (count)\n    \t\tcount++;\n    \telse\n    \t\tcount=1;\n    \tdbCounts[name]=count;\n    }\n    export function showCount(name:string){\n    \tlet count = dbCounts[name];\n    \tif (!count) count=0;\n    \tDB.msg(name,count);\n    }\n    export function showCounts(msg?:string){\n    \tlet m:string = \"counts \";\n    \tif (msg) m+=msg;\n    \tDB.start(m);\n    \tfor (let name in dbCounts){\n    \t\tDB.showCount(name);\n    \t}\n    \tDB.end(m);\n    }\n    export function clearCounts(name?:string){\n    \tif (name){\n    \t\tdbCounts[name]=0;\n    \t} else {\n    \t\tfor (let key in dbCounts){\n    \t\t\tDB.clearCounts(key);\n    \t\t}\n    \t}\n    }\n    var autoInterval=null;\n    export function countsAutoShow(millis:number){\n    \tif (autoInterval)\n    \t\tautoInterval.clearInterval();\n    \tautoInterval = setInterval(()=>{\n    \t\tDB.showCounts();\n    \t},millis);\n    }\n    export function noCountsAutoShow(){\n    \tclearInterval(autoInterval);\n    }\n\n}","class UserManager {\n    protected currentUserName:string;\n    dataSource:DataSource;\n    protected currentUserKey:string;\n    constructor(){\n        this.currentUserName=null;\n        this.dataSource=null;\n        this.currentUserKey=null;\n    }\n    get userName():string { return this.currentUserName}\n    login(userName:string,password:string,done:(err:string,user:DataObj)=>void,\n            serverContext:ServerContext){\n        if (this.dataSource.isRemote()){\n            this.dataSource.httpLogin(userName,password,(err:string,user:DataObj)=>{\n                if (err) {\n                    done(err,null);\n                } else {\n                    this.currentUserName=userName;\n                    this.currentUserKey=user._key;\n                    done(null,user);\n                }\n            });\n        }else {\n            this.currentUserName=userName;\n            this.currentUserKey=null;\n            done(null,null);\n        }\n    }\n\n    logout(done:(err:string)=>void){\n        if (this.dataSource.isRemote()){\n            this.dataSource.httpLogout((err:string)=>{\n                if (err) {\n                    done(err);\n                } else {\n                    this.currentUserName=null;\n                    this.currentUserKey=null;\n                    done(null);\n                }\n            })\n        } else {\n            this.currentUserName=null;\n            this.currentUserKey=null;\n            done(null)\n        }\n    }\n    createUser(userDesc:any,password:string,done:(err:string)=>void,\n            serverContext:ServerContext){\n        done(null);\n    }\n    getUserKey(serverContext?:ServerContext):string{\n        if (serverContext){\n            return serverContext.getUserKey();\n        } else {\n            return this.currentUserKey;\n        }\n    }\n    getUser(done:(user:DataObj)=>void,serverContext?:ServerContext) {\n        let userKey = this.getUserKey(serverContext);\n        this.dataSource.GET(userKey,(err:string,user:DataObj)=>{\n            done(user);\n        },false,serverContext);\n    }\n    serverSideLogin(userName:string,password:string,serverContext:ServerContext,done:(err:string,user:DataObj)=>void){\n        DB.msg(\"serverSideLogin not implemented for this \",this);\n        done(\"no serverside login\",null);\n    }\n    serverSideLogout(serverContext:ServerContext,done:(err:string)=>void){\n        DB.msg(\"serverSideLogout not implemented for this \",this);\n        done(\"no serverside logout\");\n    }\n}","/// <reference path=\"UserManager.ts\"/>\n/// <reference path=\"ServerContext.ts\"/>\n\nabstract class RightsManager {\n    dataSource:DataSource;\n    userManager:UserManager;\n    constructor(dataSource:DataSource,userManager:UserManager){\n        this.dataSource = dataSource;\n        this.userManager=userManager;\n        this.userManager.dataSource = this.dataSource;\n    }\n    /* Each of these methods verifies the ability for the current user\n        to execute the corresponding method on the DataSource.\n        If there are no problems, then null is returned.\n        Otherwise a descriptive message string is returned showing the violation\n    */\n\n   abstract checkGET(key:string,serverContext:ServerContext,done:(granted:boolean)=>void);\n    checkGETm(keys:string[],serverContext:ServerContext,done:(granted:boolean)=>void){\n        this.checkAllGET(keys,0,serverContext,done);\n    }\n    abstract checkGETBlob(blobKey:string,serverContext,done:(granted:boolean)=>void);\n    abstract checkPUT(obj:DataObj,serverContext:ServerContext,done:(granted:boolean)=>void);\n    checkPUTm(objs:DataObj[],serverContext:ServerContext,done:(granted:boolean)=>void){\n        this.checkAllPUT(objs,0,serverContext,done);\n    }\n    abstract checkPUTBlob(serverContext:ServerContext,done:(granted:boolean)=>void);\n    abstract checkDELETE(key:string,serverContext:ServerContext,done:(granted:boolean)=>void);\n    abstract checkFIND(typeCode:string,search:Query,serverContext:ServerContext,done:(granted:boolean)=>void);\n    login(userId:string,password:string,done:(err:string,user:DataObj)=>void,serverContext:ServerContext){\n        if (this.userManager)\n            this.userManager.login(userId,password,done,serverContext);\n        else\n            done(\"RightsManager has no UserManager to login\",null);\n    }\n    createUser(userDesc:any,password:string,done:(err:string)=>void,serverContext:ServerContext){\n        if (this.userManager)\n            this.userManager.createUser(userDesc,password,done,serverContext);\n        else\n            done(\"RightsManager has no UserManager to create user\");\n    }\n        \n    protected checkAllGET(keys:string[],idx:number,serverContext:ServerContext,done:(granted:boolean)=>void){\n        if (idx>=keys.length){\n            done(true);\n        } else {\n            let obj = keys[idx];\n            this.checkGET(obj,serverContext,(granted:boolean)=>{\n                if (granted){\n                    this.checkAllGET(keys,idx+1,serverContext,done);\n                } else {\n                    done(false);\n                }\n            })\n        }\n    }\n    protected checkAllPUT(objs:DataObj[],idx:number,serverContext:ServerContext,done:(granted:boolean)=>void){\n        if (idx>=objs.length){\n            done(true);\n        } else {\n            let obj = objs[idx];\n            this.checkPUT(obj,serverContext,(granted:boolean)=>{\n                if (granted){\n                    this.checkAllPUT(objs,idx+1,serverContext,done);\n                } else {\n                    done(false);\n                }\n            })\n        }\n    }\n}","/** \n * These objects can be used to create queries that can be used in searches\n */\n\ntype QueryValue = number |string | boolean | Query\ntype NumberQuery = number | Query;\ntype StringQuery = string | Query;\ntype BooleanQuery = boolean | Query;\nclass Query{\n    exp:any;\n    private constructor(exp:any){\n        this.exp=exp;\n    }\n    static OR(options:QueryValue[]):Query{\n        let desc = { $$:\"OR\", options: options }\n        return new Query(desc);\n    }\n    static AND(options:QueryValue[]):Query{\n        return new Query ({ $$:\"AND\",options:options})\n    }\n    static range(from:QueryValue,to:QueryValue):Query{\n        return new Query({ $$:\"RANGE\", from:from,to:to})\n    }\n    static anything():Query{\n        return new Query({$$:\"ANY\"})\n    }\n    static dict(desc:{[attName:string]:QueryValue}):Query{\n        let d:any ={$$:\"DICT\"};\n        for (let k in desc){\n            d[k]=desc[k];\n        }\n        return new Query(d)\n    }\n    static is(value:number|string|boolean):Query{\n        return new Query( { $$:\"IS\",value:value})\n    }\n    static listContains(query:QueryValue):Query{\n        return new Query( {$$:\"LC\",query:query})\n    }\n    static match(q1:QueryValue,q2:QueryValue):boolean{\n        if (!q1)\n            if (!q2) return true;\n            else return false;\n        else\n            if (!q2) return false;\n        if (typeof q1 != typeof q2) return false;\n        switch(typeof q1){\n            case \"number\":\n            case \"string\":\n            case \"boolean\":\n                return q1==q2;\n            default:{\n                return this.matchQuery(<Query>q1,<Query>q2);\n            }\n        }\n    }\n    matches(val:any):boolean{\n        if (val instanceof DataObj) return this.matchesDO(val);\n        switch(this.exp.$$){\n            case \"OR\":\n                for (let i in this.exp.options){\n                    let opt = this.exp.options[i];\n                    if (Query.matchesQV(opt,val)) return true;\n                }\n                return false;\n            case \"AND\":\n                for (let i in this.exp.options){\n                    let opt = this.exp.options[i];\n                    if (!Query.matchesQV(opt,val)) return false\n                }\n                return true;\n            case \"RANGE\":\n                return this.rangeMatch(this.exp.from,this.exp.to,val);\n            case \"ANY\":\n                return true;\n            case \"DICT\":\n                return this.dictMatch(this.exp,val);\n            case \"IS\":\n                return this.exp.value == val;\n            case \"LC\":\n                for (let i in val){\n                    let v = val[i];\n                    if (Query.matchesQV(this.exp.query,v)) return true;\n                }\n                return false;\n\n        }\n    }\n    static matchesQV(qv:QueryValue,val:any):boolean{\n        switch(typeof qv){\n            case \"number\":\n            case \"string\":\n            case \"boolean\":\n                return qv == val;\n            default:\n                return qv.matches(val);\n        }\n    }\n    attribute(attName:string):number | string | boolean | Query{\n        if (this.exp.$$ != \"DICT\") return null;\n        let att = this.exp[attName];\n        return att;\n    }\n\n    toJSON():any{\n        let src = this.exp;\n        let rslt:any = { $$:src.$$ }\n        switch(this.exp[\"$$\"]){\n            case \"OR\":\n            case \"AND\":\n                rslt.options = this.queryValueListToJSON(src.options)\n                break;\n            case \"RANGE\":\n                rslt.from = this.queryValueToJSON(src.from);\n                rslt.to = this.queryValueToJSON(src.to);\n                break;\n            case \"ANY\":\n                break;\n            case \"DICT\":\n                rslt=this.dictToJSON(src);\n                break;\n            case \"IS\":\n                rslt.value = this.queryValueToJSON(src.value);\n                break;\n            case \"LC\":\n                rslt.value = this.queryValueToJSON(src.query);\n                break;\n        }\n        return rslt;\n    }\n    \n    static fromJSON(json:any):QueryValue{\n        switch(typeof json){\n            case \"number\":\n            case \"string\":\n            case \"boolean\":\n                return json;\n            default:\n                switch(json.$$){\n                    case \"OR\":\n                        return Query.OR(Query.listFromJSON(json.options));\n                    case \"AND\":\n                        return Query.AND(Query.listFromJSON(json.options));\n                    case \"RANGE\":\n                        return Query.range(Query.fromJSON(json.from),Query.fromJSON(json.to))\n                    case \"ANY\":\n                        return Query.anything();\n                    case \"DICT\":\n                        let dict = {};\n                        for (let i in json){\n                            if (i!=\"$$\"){\n                                dict[i]=Query.fromJSON(json[i]);\n                            }\n                        }\n                        return Query.dict(dict);\n                    case \"IS\":\n                        return Query.is(json.value)\n                    case \"LC\":\n                        return Query.listContains(Query.fromJSON(json.query))\n                }\n        }\n    }\n    private queryValueListToJSON(list:QueryValue[]):any{\n        let rslt = [];\n        for (let i in list){\n            let item = list[i];\n            rslt.push(this.queryValueToJSON(item))\n        }\n        return rslt;\n    }\n    private queryValueToJSON(val:QueryValue){\n        switch(typeof val){\n            case \"number\":\n            case \"string\":\n            case \"boolean\":\n                return val;\n            default:\n                return val.toJSON();\n        }\n    }\n    private dictToJSON(desc:{[attName:string]:QueryValue}):any{\n        let rslt:any={ $$:\"DICT\"};\n        for (let i in desc){\n            rslt[i] = this.queryValueToJSON(desc[i])\n        }\n        return rslt;\n    }\n\n    private static listFromJSON(list:any[]):QueryValue[] {\n        let rslt:QueryValue[]=[];\n        for (let i in list){\n            let item = Query.fromJSON(list[i]);\n            rslt.push(item);\n        }\n        return rslt;\n    }\n\n    toMongo():any{\n        let rslt:any={};\n        \n        switch(this.exp.$$){\n            case \"OR\":\n                let oList:[]=this.mongoOptionsList(this.exp.options);\n                return { $or: oList }\n            case \"AND\":\n                return { $and: this.mongoOptionsList(this.exp.options)}\n            case \"RANGE\":\n                if (this.exp.from ){\n                    rslt.$gte = this.exp.from;\n                }\n                if (this.exp.to){\n                    rslt.$lte = this.exp.to;\n                }\n                return rslt;\n            case \"ANY\":\n                return { $exists: true};\n            case \"DICT\":\n                for (let i in this.exp){\n                    if (i!=\"$$\"){\n                        let v = this.exp[i];\n                        if (v) {\n                            if (v.exp && v.exp.$$ && v.exp.$$==\"DICT\"){\n                                Query.mongoCollapseDICT(rslt,i,v.exp);\n                            } else\n                                rslt[i]=Query.toMongoValue(v)\n                        } else if (v==0)\n                            rslt[i]=Query.toMongoValue(v)\n                    }\n                }\n                return rslt;\n            case \"IS\":\n                return this.exp.value;\n            case \"LC\":\n                return { $elemMatch: Query.toMongoValue(this.exp.query)}\n            default:\n                return { badoperator:this.exp.$$}\n        }\n    }\n    private static mongoCollapseDICT(rslt:{},key:string,v:{}){\n        for (let k in v){\n            if (k!=\"$$\"){\n                rslt[key+\".\"+k]=v[k];\n            }\n        }\n    }\n    private mongoOptionsList(options:QueryValue[]){\n        let rslt:any=[];\n        for (let i in options){\n            let option = options[i];\n            let mongOpt = Query.toMongoValue(option);\n            rslt.push(mongOpt);\n        }\n        return rslt;\n    }\n    private static toMongoValue(val:QueryValue){\n        switch(typeof val){\n            case \"number\":\n            case \"string\":\n            case \"boolean\":\n                return val;\n            default:\n                return val.toMongo();\n        }\n    }\n    private static matchQuery(q1:Query,q2:Query):boolean{\n        if (q1.exp.$$ != q2.exp.$$) return false;\n        switch(q1.exp.$$){\n            case \"OR\":\n            case \"AND\":\n                return this.matchOptionLists(q1.exp.options,q2.exp.options)\n            case \"RANGE\":\n                return this.match(q1.exp.from,q2.exp.from) && this.match(q1.exp.to,q2.exp.to);\n            case \"ANY\":\n                return true;\n            case \"DICT\":\n                return this.matchDicts(q1.exp,q2.exp);\n            case \"IS\":\n                return q1.exp.value == q2.exp.value;\n            case \"LC\":\n                return this.match(q1.exp.query,q2.exp.query);\n            default:\n                DB.msg(\"matchQuery got invalid $$\",q1.exp.$$);\n                return false;\n        }\n    }\n    private static matchOptionLists(l1:QueryValue[],l2:QueryValue[]):boolean{\n        if (l1.length!=l2.length) return false;\n        for (let i in l1){\n            let q=l1[i];\n            if (!this.matchOptions(q,l2)) return false;\n        }\n        for (let i in l2){\n            let q=l2[i];\n            if (!this.matchOptions(q,l1)) return false;\n        }\n        return true;\n    }\n    private static matchOptions(q:QueryValue,list:QueryValue[]):boolean{\n        for (let i in list){\n            let lq = list[i];\n            if (this.match(q,lq)) return true;\n        }\n        return false;\n    }\n    private static matchDicts(d1:{},d2:{}):boolean{\n        for (let k in d1){\n            let a1=d1[k];\n            let a2=d2[k];\n            if (!this.match(a1,a2)) return false;\n        }\n        for (let k in d2){\n            let a1=d1[k];\n            let a2=d2[k];\n            if (!this.match(a1,a2)) return false;\n        }\n        return true;\n    }\n    \n    private rangeMatch(from,to,val){\n        let fromTrue = true;\n        if (from){\n            switch(typeof from){\n                case \"number\":\n                    fromTrue=from<=val;\n                    break;\n                case \"string\":\n                    fromTrue = from.localeCompare(val)>=0;\n                    break;\n                default:\n                    fromTrue=false;\n                    break;\n            }\n        }\n        let toTrue = true;\n        if (to){\n            switch(typeof to){\n                case \"number\":\n                    toTrue=val<=to;\n                    break;\n                case \"string\":\n                    toTrue = val.localeCompare(to)>=0;\n                    break;\n                default:\n                    toTrue=false;\n                    break;\n            }\n        }\n        return fromTrue && toTrue;\n    }\n    private dictMatch(dict:{[attName:string]:QueryValue},val):boolean{\n        if (typeof val != \"object\") return false;\n        for (let att in dict){\n            if (att!=\"$$\"){\n                let dVal = dict[att];\n                let vVal = val[att];\n                if (!Query.matchesQV(dVal,vVal)) return false;\n            }\n        }\n        return true;\n    }\n    \n    \n    matchesDO(obj:DataObj):boolean{\n        switch(this.exp.$$){\n            case \"OR\":\n                for (let i in this.exp.options){\n                    let opt = this.exp.options[i];\n                    if (Query.matchesQV(opt,obj)) return true;\n                }\n                return false;\n            case \"AND\":\n                for (let i in this.exp.options){\n                    let opt = this.exp.options[i];\n                    if (!Query.matchesQV(opt,obj)) return false\n                }\n                return true;\n            case \"RANGE\":\n                return false;// no ranges on DataObj\n            case \"ANY\":\n                return true;\n            case \"DICT\":\n                return this.dictMatchDO(this.exp,obj);\n            case \"IS\":\n                return false; // no is test for DataObj\n            case \"LC\":\n                return false; // no list contains on DataObj\n        }\n    }\n    private dictMatchDO(dict:{[attName:string]:QueryValue},obj:DataObj):boolean{\n        for (let att in dict){\n            if (att!=\"$$\"){\n                let dVal = dict[att];\n                let oVal = obj[\"get\"+att]();\n                if (!Query.matchesQV(dVal,oVal)) return false;\n            }\n        }\n        return true;\n    }\n}","/// <reference path=\"../share/DB.ts\"/>\n/// <reference path=\"DataObj.ts\"/>\n/// <reference path=\"RightsManager.ts\"/>\n/// <reference path=\"Query.ts\"/>\n\n/*type DataSearchRangeSpec = { from: string | number, to: string | number};\ntype NumberQuery = number | {from?:number,to?:number};\ntype StringQuery = string | {from?:string, to?:string};\ntype FieldQuery = NumberQuery | StringQuery | boolean;\ntype DataSearchSpec = { [fieldName:string]:FieldQuery}*/\ninterface DataMonitor {\n    notify();\n}\nclass DataSource {\n    private rightsManager_:RightsManager; // any will be replaced with actual interface later\n    private dataMonitor:DataMonitor;\n    constructor(){\n        DataObj.globalSource=this;\n    }\n    setDataMonitor(dataMonitor:DataMonitor){\n        this.dataMonitor=dataMonitor;\n    }\n    getRightsManager():RightsManager{\n        return this.rightsManager_;\n    }\n    setRightsManager(rm:RightsManager){\n        this.rightsManager_=rm;\n    }\n    isRemote():boolean { return false}\n    notify(){\n        if (this.dataMonitor) \n            this.dataMonitor.notify();\n    }\n    GET(key:string, done:(err:string,data:DataObj)=>void,forceRequest:boolean,\n            serverContext:ServerContext){\n        done(null,null);\n    }\n    canGet(key:string,serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm = this.rightsManager_;\n        if (rm){\n            rm.checkGET(key,serverContext,done);\n        } else {\n            done(false);\n        }\n    } \n    cGET(key:string,forceRequest?:boolean):DataObj{\n        DB.msg( \"cGET This data source has no caching\");\n        return null;\n    }\n    GETm(keys:string[],done:(err:string,data:DataObj[])=>void,forceRequest:boolean,\n            serverContext:ServerContext){\n        done(null,null);\n    }\n    canGETm(keys:string[],serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm=this.rightsManager_\n        if (rm){\n            rm.checkGETm(keys,serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    cGETm(keys:string[],forceRequest?:boolean):DataObj[]{\n        DB.msg( \"cGETm This data source has no caching\");\n        return null;\n    }\n    \n    PUT(obj:DataObj,done:(err:string,newObj:DataObj)=>void,serverContext:ServerContext){\n        done(null,null);\n    }\n    canPUT(obj:DataObj,serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm=this.rightsManager_;\n        if (rm){\n            rm.checkPUT(obj,serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    canGETBlob(blobKey:string,serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm=this.rightsManager_;\n        if(rm){\n            rm.checkGETBlob(blobKey,serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    GETBlob(blobKey:string,serverContext:ServerContext,done:(err:string,blob:BlobStoreRec)=>void){\n        DB.msg(\"data source has no downloadFile\",this);\n    }\n    canPUTBlob(serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm = this.rightsManager_;\n        if (rm){\n            rm.checkPUTBlob(serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    PUTBlob(blob:Blob,name:string,serverContext:ServerContext,done:(err:string,blobKey:string)=>void){\n        done(null,null);\n    }\n    PUTFileBlob(file:File,serverContext:ServerContext,done:(err:string,blobKey:string)=>void){\n        done(null,null);\n    }\n    PUTm(objs:DataObj[],done:(err:string,newObjs:DataObj[])=>void,serverContext:ServerContext){\n        done(null,null);\n    }\n    canPUTm(objs:DataObj[],serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm=this.rightsManager_;\n        if (rm){\n            rm.checkPUTm(objs,serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    DELETE(key:string,done?:(err:string)=>void){\n        done(null)\n    }\n    canDELETE(key:string,serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm=this.rightsManager_;\n        if (rm){\n            rm.checkDELETE(key,serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    FIND(typeCode:string, search:Query,done:(err:string,keys:string[],objs:DataObj[])=>void,\n            keysOnly:boolean,forceRequest:boolean,serverContext:ServerContext){\n        done(null,null,null);\n    }\n    protected getFromKeys(keys:string[],idx:number,objs:DataObj[],done:(objs:DataObj[])=>void,serverContext:ServerContext){\n        if (idx>=keys.length){\n            done(objs);\n        } else {\n            this.GET(keys[idx],(err:string,data:DataObj)=>{\n                if (!err){\n                    objs.push(data);\n                    this.getFromKeys(keys,idx+1,objs,done,serverContext);\n                }\n            },false,serverContext);\n        }\n    }\n    canFIND(typeCode:string,search:Query,serverContext:ServerContext,done:(granted:boolean)=>void){\n        let rm=this.rightsManager_;\n        if (rm){\n            rm.checkFIND(typeCode,search,serverContext,done);\n        } else {\n            done(false);\n        }\n    }\n    cFIND(typeCode:string,search:Query,keysOnly:boolean,forceRequest:boolean):string[]{\n        DB.msg( \"cFIND no caching on this data service\");\n        return null;\n    }\n    static collectionFromKey(key:string):string{\n        if (!key){\n            DB.msg(\"no key for collection\");\n            return \"\";\n        }\n        let parts = key.split(\"_\");\n        let typeCode = parts[0];\n        let colCode = DataObj.typeToCollection(typeCode);\n        return colCode;\n    }\n    static typeFromKey(key:string):string{\n        let parts = key.split(\"_\");\n        return parts[0];\n    }\n    static idFromKey(key:string):string {\n        let parts = key.split(\"_\");\n        return parts[1];\n    }\n    static generateKey(typeCode:string):string {\n        let id = Math.random()*1000000;\n        id = Math.floor(id);\n        return typeCode+\"_\"+id;\n    }\n    static filterKeyList(expectedCode:string, keyList:string[]):string[] {\n        let rslt:string[] = [];\n        for (let idx in keyList){\n            let key = keyList[idx];\n            let ty = DataSource.typeFromKey(key);\n            if (DataObj.checkTypeCode(expectedCode,ty)){\n                rslt.push(key);\n            }\n        }\n        return rslt;\n    }\n    touched(obj:DataObj):boolean{\n        this.notify();\n        return true;\n    }\n    login(userId:string,password:string,done:(err:string)=>void,serverContext?:ServerContext){\n        if (this.getRightsManager())\n            this.getRightsManager().login(userId,password,done,serverContext);\n        else\n            done(\"DataSource has no RightsManager to login\");\n    }\n    httpLogin(userId:string,password:string,done:(err:string,user:DataObj)=>void){\n        done(\"No httpLogin for this data source\",null);\n    }\n    httpLogout(done:(err:string)=>void){\n        done(\"No httpLogin for this data source\");\n    }\n    createUser(userDesc:any,password:string,done:(err:string)=>void,serverContext?:ServerContext){\n        if (this.getRightsManager())\n            this.getRightsManager().createUser(userDesc,password,done,serverContext);\n        else\n            done(\"DataSource has no RightsManager to create user\");\n    }\n\n}\n","/// <reference path=\"ServerContext.ts\"/>\n/// <reference path=\"./DataSource.ts\"/>\n\n\n//\nclass DataObj {\n\tprotected _type:string;\n\t_key:string;\n\tparent:DataObj;\n\tdataSource: DataSource;\n\tstatic globalSource:DataSource;\n\tprivate blockTouch_:boolean;\n\tconstructor (json:any){\n\t\tthis.blockTouch_=false;\n\t\tthis._type = this.getTypeCode();\n\t\tthis._key = json._key;\n\t\tif (!json._key && json._id){\n\t\t\tthis._key = this.getTypeCode()+\"_\"+json._id;\n\t\t}\n\t\tthis.parent=null;\n\t}\n\t\n\tgetTypeCode():string{\n\t\treturn null;\n\t}\n\tgetDataSource():DataSource{\n\t\tif (this.dataSource)\n\t\t\treturn this.dataSource;\n\t\telse if (this.parent)\n\t\t\treturn this.parent.getDataSource();\n\t\telse if (DataObj.globalSource)\n\t\t\treturn DataObj.globalSource;\n\t\telse\n\t\t\treturn null;\n\t}\n\tgetUserManager():UserManager{\n\t\tlet ds = this.getDataSource();\n\t\tif (ds){\n\t\t\tlet rm = ds.getRightsManager();\n\t\t\tif (rm){\n\t\t\t\tlet um = rm.userManager;\n\t\t\t\treturn um;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\ttouch():boolean{ // touch will return false if any permissions are violated.\n\t\tif (this.blockTouch_) return true;\n\t\tif (this.dataSource){\n\t\t\tif (this.dataSource.touched(this)){ // the dataSource is the prime mechanism for permissions\n\t\t\t\tif (this.parent)\n\t\t\t\t\treturn this.parent.touch();\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.parent)\n\t\t\t\treturn this.parent.touch();\n\t\t\telse\n\t\t\t\treturn true;\n\t\t}\n\t}\n\tblockTouch(on:boolean){\n\t\tthis.blockTouch_=on;\n\t\tif(!on) this.touch();\n\t}\n\ttoJSON():any{\n        return null;\n\t}\n\tstatic GET(key:string, done:(err:string,newObj:DataObj)=>void,forceRequest:boolean,\n\t\t\tserverContext:ServerContext){\n\t\tlet ds = DataObj.globalSource;\n\t\tif (ds){\n\t\t\tds.canGet(key,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.GET(key,done,forceRequest,serverContext);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR GET on ${key} had rights fail`,null);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdone(`ERR GET on ${key} has no dataSource`,null);\n\t\t}\n\t}\n\tstatic cGET(key:string,forceRequest:boolean){\n\t\tlet ds=DataObj.globalSource;\n\t\tif (ds){\n\t\t\treturn ds.cGET(key,forceRequest);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tstatic GETm(keys:string[], done:(err:string,newObjs:DataObj[])=>void,forceRequest:boolean,\n\t\t\tserverContext:ServerContext){\n\t\tlet ds = DataObj.globalSource;\n\t\tif (ds){\n\t\t\tds.canGETm(keys,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.GETm(keys,done,forceRequest,serverContext);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR GETm  had rights fail`,null);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdone(`ERR GETm has no dataSource`,null);\n\t\t}\n\t}\n\t\n\tstatic cGETm(keys:string[],forceRequest?:boolean):DataObj[]{\n\t\tlet ds= DataObj.globalSource;\n\t\tif (ds){\n\t\t\treturn ds.cGETm(keys,forceRequest);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tGETFileBlob(blobKey:string,serverContext:ServerContext,done:(err:string,blob:BlobStoreRec)=>void){\n\t\tlet ds = this.getDataSource();\n\t\tif (ds){\n\t\t\tds.canGETBlob(blobKey,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.GETBlob(blobKey,serverContext,done);\n\t\t\t\t} else {\n\t\t\t\t\tdone(\"ERR GETBlobFile had rights fail\",null);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tPUT(done:(err:string,newObj:DataObj)=>void,serverContext?:ServerContext){\n\t\tlet ds = this.getDataSource();\n\t\tif (ds){\n\t\t\tds.canPUT(this,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.PUT(this,done,serverContext);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR PUT on ${this._key} had rights fail`,null);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdone(`ERR PUT on ${this._key} has no dataSource`,null);\n\t\t}\n\t}\n\tstatic PUTFileBlob(file:File,done:(err:string,blobKey:string)=>void,serverContext?:ServerContext){\n\t\tlet ds=this.globalSource;\n\t\tif (ds){\n\t\t\tds.canPUTBlob(serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.PUTFileBlob(file,serverContext,done);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR PUTFileBlob  had rights fail`,null);\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tdone(`ERR PUTFileBlob has no dataSource`,null);\n\t\t}\n\t}\n\tstatic PUTBlob(blob:Blob,name:string,done:(err:string,blobKey:string)=>void,serverContext?:ServerContext){\n\t\tlet ds=this.globalSource;\n\t\tif (ds){\n\t\t\tds.canPUTBlob(serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.PUTBlob(blob,name,serverContext,done);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR PUTFileBlob  had rights fail`,null);\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tdone(`ERR PUTBlob has no dataSource`,null);\n\t\t}\t\t\n\t}\n\tstatic GETBlob(blobKey:string,serverContext:ServerContext,done:(err:string,blob:BlobStoreRec)=>void){\n\t\tlet ds=this.globalSource;\n\t\tif (ds){\n\t\t\tds.canGETBlob(blobKey,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.GETBlob(blobKey,serverContext,done);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR getFileBlob had rights fail`,null);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n    }\n\tstatic PUTm(objs:DataObj[],done:(err:string, newObjs:DataObj[])=>void,serverContext:ServerContext){\n\t\tlet ds = this.globalSource;\n\t\tif (ds){\n\t\t\tds.canPUTm(objs,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.PUTm(objs,done,serverContext);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR PUTm had rights fail`,null);\n\t\t\t\t}\n\t\t\t});\n\t\t}else {\n\t\t\tdone(`ERR PUTm  has no DataObj.globalSource`,null);\n\t\t}\n\t}\n\tDELETE(done?:(err:string)=>void,serverContext?:ServerContext){\n\t\tlet ds = this.getDataSource();\n\t\tif (ds){\n\t\t\tds.canDELETE(this._key,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.DELETE(this._key,done);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR DELETE on ${this._key} has rights fail`);\n\t\t\t\t}\n\t\t\t})\t\n\t\t} else {\n\t\t\tdone(`ERR DELETE on ${this._key} has no dataSource`);\n\t\t}\n\t}\n\tstatic FIND(typeCode:string,search:Query,done:(err:string,keys:string[])=>void,\n\t\t\tkeysOnly:boolean,forceRequest:boolean,serverContext:ServerContext){\n\t\tlet ds=DataObj.globalSource;\n\t\tif (ds){\n\t\t\tds.canFIND(typeCode,search,serverContext,(granted:boolean)=>{\n\t\t\t\tif (granted){\n\t\t\t\t\tds.FIND(typeCode,search,done,keysOnly,forceRequest,serverContext);\n\t\t\t\t} else {\n\t\t\t\t\tdone(`ERR FIND on ${typeCode} had rights fail`,null);\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tdone(`ERR FIND on ${typeCode} has no dataSource`,null);\n\t\t}\n\t}\n\tstatic cFIND(typeCode:string,search:Query,keysOnly:boolean,forceRequest:boolean):string[]{\n\t\tlet ds= DataObj.globalSource;\n\t\tif (ds){\n\t\t\treturn ds.cFIND(typeCode,search,keysOnly,forceRequest);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tstatic checkTypeCode(expectedType:string, receivedType:string):boolean{\n\t\tif (!expectedType) return true;\n\t\tif (!receivedType) return true;\n\t\treturn DataObj.canA[expectedType][receivedType];\n\t}\n\tstatic make:(expectedType:string,json:any)=>DataObj;\n\tstatic makeList:(expectedType:string,json:any[],parent:DataObj)=>DataObj[];\n\tstatic makeDict:(expectedType:string,json:any,parent:DataObj)=>{[k:string]:DataObj};\n\tprivate static classInfo_:DataObjClassInfo;\n\tstatic set classInfo(info:DataObjClassInfo){\n\t\tDataObj.classInfo_=info;\n\t\tDataObj.buildTypeToCollection();\n\t\tDataObj.buildCanAssign();\n\t}\n\tstatic get classInfo():DataObjClassInfo{\n\t\treturn DataObj.classInfo_;\n\t}\n\tprivate static tToC:{ [typeCode:string]:string};\n\tprivate static canA:{ [superCode:string]:{[typeCode:string]:boolean}};\n\tprivate static sRoots: { [rootClassName:string]:boolean}=null;\n\tprivate static buildTypeToCollection(){\n\t\tDataObj.tToC={};\n\t\tDataObj.sRoots={};\n\t\tfor ( let typeCode in DataObj.classInfo_){\n\t\t\tDataObj.tToC[typeCode]=DataObj.topSuperCode(typeCode);\n\t\t}\n\t}\n\tstatic typeCodeToName(typeCode:string){\n\t\tlet ci = this.classInfo[typeCode];\n\t\tlet cn = ci.className;\n\t\treturn cn;\n\t}\n\tstatic typeToCollection(typeCode:string){\n\t\treturn DataObj.tToC[typeCode];\n\t}\n\tstatic collections():{ [rootClassName:string]:boolean }{\n\t\treturn DataObj.sRoots;\n\t}\n\tprivate static topSuperCode(typeCode:string):string{\n\t\tlet ci = DataObj.classInfo_[typeCode];\n\t\tif (ci && ci.superCode && ci.superCode.length>0 && typeCode != ci.superCode){\n\t\t\treturn this.topSuperCode(ci.superCode);\n\t\t} else {\n\t\t\tDataObj.sRoots[typeCode]=true;\n\t\t\treturn typeCode;\n\t\t}\n\t}\n\tprivate static buildCanAssign(){\n\t\tDataObj.canA = {};\n\t\tfor (let typeCode in DataObj.classInfo_){\n\t\t\tDataObj.superCanAssign(typeCode,typeCode);\n\t\t}\n\t}\n\tprivate static superCanAssign(superCode,typeCode){\n\t\tlet ca = DataObj.canA;\n\t\tif (!ca[superCode])\n\t\t\tca[superCode]={};\n\t\tca[superCode][typeCode]=true;\n\t\tlet ci = DataObj.classInfo_[superCode];\n\t\tif (ci){\n\t\t\tlet sc = ci.superCode;\n\t\t\tif (sc && sc.length>0)\n\t\t\t\tthis.superCanAssign(sc,typeCode);\n\t\t}\n\t}\n\n}\n\ntype DataObjClassInfo = { \n\t[typeCode:string]:{ \n\t\tclassName:string, \n\t\tsuperCode?:string,\n\t\tkeyed:boolean,\n\t\tfields: {\n\t\t\t[fieldName:string]: { type:string, isList:boolean, isDict:boolean}\n\t\t}\n\t}\n}\n\ntype MongoBinary = any;\ntype BlobStoreRec = {\n\t_key?:string,\n\tname:string,\n\ttype:string,\n\tnextBlob?:string,\n\tdata: MongoBinary\n}","/// <reference path=\"DataSource.ts\"/>\n\nclass MemDataSource extends DataSource {\n    datastore:any;\n    constructor(){\n        super();\n        this.datastore={};\n    }\n\n    GET(key:string, done:(err:string,data:DataObj)=>void,forceRequest:boolean,\n            serverContext:ServerContext){\n        let _this=this;\n        \n        let collectionKey = DataSource.collectionFromKey(key);\n        let id = DataSource.idFromKey(key);\n        let collection = this.datastore[collectionKey];\n        if (!collection){\n            this.datastore[collectionKey]={}\n            collection = this.datastore[collectionKey];\n        }\n        let rec = collection[id];\n        if (rec) {\n            rec = DataObj.make(collectionKey,rec);\n            rec.dataSource=_this;\n            done(null,rec);\n        } else\n            done(\"key not found \"+key,null);\n        \n    }\n    cGET(key:string,forceRequest?:boolean):DataObj{\n        let collectionKey = DataSource.collectionFromKey(key);\n        let id = DataSource.idFromKey(key);\n        let collection = this.datastore[collectionKey];\n        if (!collection){\n            this.datastore[collectionKey]={}\n            collection = this.datastore[collectionKey];\n        }\n        let rec = collection[id];\n        if (rec) {\n            rec = DataObj.make(collectionKey,rec);\n            rec.dataSource=this;\n            return rec;\n        } else{\n            return null;\n        }\n    }\n    GETm(keys:string[], done:(err:string,data:DataObj[])=>void,forceRequest:boolean,\n            serverContext:ServerContext){\n        this.multiGet(0,keys,[],done,forceRequest);\n    }\n    private multiGet(idx:number,keys:string[],rslt:DataObj[],done:(err:string,data:DataObj[])=>void,forceRequest:boolean){\n        if (idx>=keys.length) {\n            done(null,rslt);\n        } else {\n            this.GET(keys[idx],(err:string,data:DataObj)=>{\n                if (err) {\n                    done(err,rslt);\n                } else {\n                    rslt.push(data);\n                    this.multiGet(idx+1,keys,rslt,done,forceRequest);\n                }\n            },forceRequest,null);\n        }\n    }\n    GETBlob(blobKey:string,serverContext:ServerContext,done:(err:string,blob:BlobStoreRec)=>void){\n\n        let collection = this.datastore[\"BLOB\"];\n        if (collection){\n            let file:File = collection[blobKey];\n            DB.msg(\"downloadFile memdatasource not done\",file);\n        }\n    }\n    cGETm(keys:string[],forceRequest?:boolean):DataObj[]{\n        let rslt:DataObj[] = [];\n        for (let i in keys){\n            let key = keys[i];\n            let obj = this.cGET(key,forceRequest);\n            if (obj)\n                rslt.push(obj);\n        }\n        return rslt;\n    }\n    PUT(obj:DataObj,done:(err:string,newObj:DataObj)=>void, serverContext:ServerContext){\n        \n        let _this=this;\n\n        let key = obj._key;\n        if (!key){\n            let tc = obj.getTypeCode();\n            key = DataSource.generateKey(tc);\n            obj._key=key;\n        }\n        let collectionKey = obj.getTypeCode();\n        let collection = this.datastore[collectionKey];\n        if (!collection){\n            this.datastore[collectionKey]={}\n            collection = this.datastore[collectionKey];\n        }\n        let id = DataSource.idFromKey(key);\n        collection[id]=obj.toJSON();\n        obj.dataSource = _this;\n        done(null,obj);\n    }\n    PUTm(objs:DataObj[],done:(err:string,newObjs:DataObj[])=>void,\n            serverContext:ServerContext){\n        this.multiPut(0,objs,[],done,serverContext);\n    }    \n    \n    private multiPut(idx:number,objs:DataObj[],rslt:DataObj[],done:(err:string,newObjs:DataObj[])=>void,\n            serverContext:ServerContext){\n        if (idx>=objs.length){\n            done(null,rslt);\n        } else {\n            this.PUT(objs[idx],(err:string,data:DataObj)=>{\n                if (err){\n                    done(err,rslt);\n                } else {\n                    rslt.push(data);\n                    this.multiPut(idx+1,objs,rslt,done,serverContext);\n                }\n            },serverContext)\n        }\n    }\n    PUTFileBlob(file:File,serverContext:ServerContext,done:(err:string,blobKey:string)=>void){\n        let key = DataSource.generateKey(\"BLOB\");\n        let collection = this.datastore[\"BLOB\"];\n        if (!collection){\n            this.datastore[\"BLOB\"]={};\n            collection = this.datastore[\"BLOB\"];\n        }\n        let id = DataSource.idFromKey(key);\n        collection[id]={ _id:id, _key:key, file:file};\n        done(null,key);\n    }\n    PUTBlob(blob:Blob,name:string,serverContext:ServerContext,done:(err:string,blobKey:string)=>void){\n        let key = DataSource.generateKey(\"BLOB\");\n        let collection = this.datastore[\"BLOB\"];\n        if (!collection){\n            this.datastore[\"BLOB\"]={};\n            collection = this.datastore[\"BLOB\"];\n        }\n        let id = DataSource.idFromKey(key);\n        collection[id]={ _id:id, _key:key, blob:blob};\n        done(null,key);\n    }\n    DELETE(key:string,done?:(err:string)=>void){\n        super.DELETE(key,(err:string)=>{\n            if (err) {\n                if(done) done(err);\n            } else {\n                let collectionKey = DataSource.collectionFromKey(key);\n                let id = DataSource.idFromKey(key);\n                let collection = this.datastore[collectionKey];\n                if (collection) {\n                    let rec=collection[id];\n                    collection[id]=null;\n                    if (!rec){\n                        if (done) done(\"no such object \"+key);\n                    } else {\n                        if (done) done(null);\n                    }\n                } else {\n                    if (done) done(\"no such object \"+key);\n                }\n            \n            }\n        })\n    }\n    FIND(typeCode:string, search:Query,done:(err:string,keys:string[],objs:DataObj[])=>void,\n            keysOnly:boolean,forceRequest:boolean,serverContext:ServerContext){\n\n        let colCode = DataObj.typeToCollection(typeCode);\n        let collection = this.datastore[colCode];\n        let rslt:string[]=[];\n        if (collection){\n            for (let id in collection){\n                let rec = collection[id];\n                let match=true;\n                for (let field in search){\n                    let srch = search[field];\n                    let recVal = rec[field];\n                    if (!this.matches(srch,recVal))\n                        match=false;\n                }\n                if (match)\n                    rslt.push(rec._t_+\"_\"+id);\n            }\n            if (keysOnly){\n                done(null,rslt,[]);\n            } else {\n                let dObjs:DataObj[] = [];\n                this.getFromKeys(rslt,0,dObjs,(objs:DataObj[])=>{\n                    done(null,rslt,objs);\n                },serverContext);\n            }\n        } else {\n            done(null,rslt,[]);\n        }\n\n    }\n    matches(srch:QueryValue, val:any):boolean{\n        return Query.matchesQV(srch,val)\n    }\n    cFIND(typeCode:string,search:Query,forceRequest?:boolean):string[]{\n\n        let colCode = DataObj.typeToCollection(typeCode);\n        let collection = this.datastore[colCode];\n        let rslt:string[]=[];\n        if (collection){\n            for (let id in collection){\n                let rec = collection[id];\n                let match=true;\n                for (let field in search){\n                    let val = search[field];\n                    let recVal = rec[field];\n                    if (!recVal || recVal!=val)\n                        match=false;\n                }\n                if (match)\n                    rslt.push(rec._t_+\"_\"+id);\n            }\n            return rslt;\n        } else {\n            return null;\n        }\n\n    }\n}","/// <reference path=\"DataSource.ts\"/>\n\nlet mongo = require(\"mongodb\");\nconst Binary = require('mongodb').Binary;\nconst fs = require('fs');\n\nclass MongoDataSource extends DataSource{\n    private db;\n    private dbName:string;\n    private port:number;\n    private collectionNames:{ [collectionCode:string]:string};\n    constructor(dbHost:string,port:number,dbName:string,dropCollections?:boolean){\n        super();\n        this.dbName=dbName;\n        this.port=port;\n        let mongoClient = mongo.MongoClient;\n        //let url = \"mongodb://localhost:27017/\";\n        //let url = \"mongodb://\"+dbHost+\":\"+port+\"/\"+dbName;\n        let url = \"mongodb://\"+dbHost+\":\"+port+\"/admin\";\n        DB.msg(\"mongodb url\",url);\n        this.collectionNames=null;\n        mongoClient.connect(url,{ useNewUrlParser: true,useUnifiedTopology: true },(err,db)=>{\n            if (err){\n                throw err;\n            }\n            DB.msg(\"MONGO created \");\n            this.db=db;\n            if (dropCollections)\n                this.dropCollections();\n            // this.createCollections();\n        })\n    }\n    private dropCollections(){\n        let dbo = this.db.db(this.dbName);\n        let collections = DataObj.collections();\n        if (collections){\n            for (let collCode in collections){\n                let ci = DataObj.classInfo[collCode];\n                if (ci){\n                    let collName = ci.className;\n                    dbo.collection(collName).drop(collName,(err,res)=>{\n                        if (err) DB.msg(\"ERR Drop \"+collName+\" \",err);\n                    })\n                }\n            }\n            \n        }\n    }\n    private createCollections(){\n        if (this.collectionNames) return;\n        let dbo = this.db.db(this.dbName);\n        let collections = DataObj.collections();\n        if (collections){\n            this.collectionNames={};\n            for (let collCode in collections){\n                let ci = DataObj.classInfo[collCode];\n                if (ci){\n                    let collName = DataObj.classInfo[collCode].className;\n                    this.collectionNames[collCode]=collName;\n                    dbo.createCollection(collName,(err,res)=>{\n                        if (err) throw err;\n                    })\n                }\n            }\n            \n        }\n    }\n    GET(key:string, done:(err:string,data:DataObj)=>void,forceRequest:boolean,serverContext:ServerContext){\n        let _this=this;\n        if (!key){\n            done(\"GET null key\",null);\n            return;\n        }\n        let collectionKey = DataSource.collectionFromKey(key);\n        let id = DataSource.idFromKey(key);\n        let collectionName:string = DataObj.classInfo[collectionKey].className;\n        let dbo=this.db.db(this.dbName);\n        let idQuery = { _id:new mongo.ObjectID(id) };\n        dbo.collection(collectionName).findOne(idQuery,(err,res)=>{\n            if (err) {\n                done(err,null);\n            } else if (res){\n                res._key = key;\n                let typeCode = DataSource.typeFromKey(key);\n                let dObj:DataObj = DataObj.make(typeCode,res);\n                dObj.dataSource = _this;\n                done(null,dObj);\n            } else {\n                done(\"No such object for \"+key,null);\n            }\n        })\n        \n    }\n    GETm(keys:string[], done:(err:string,data:DataObj[])=>void,forceRequest:boolean,serverContext:ServerContext){\n        this.multiGet(0,keys,[],done,forceRequest,serverContext);\n    }\n    private multiGet(idx:number,keys:string[],rslt:DataObj[],done:(err:string,data:DataObj[])=>void,forceRequest:boolean,serverContext:ServerContext){\n        \n        let _this=this;\n        if (idx>=keys.length) {\n            done(null,rslt);\n        } else {\n            this.GET(keys[idx],(err:string,data:DataObj)=>{\n                if (err) {\n                    done(err,rslt);\n                } else {\n                    rslt.push(data);\n                    data.dataSource=_this;\n                    this.multiGet(idx+1,keys,rslt,done,forceRequest,serverContext);\n                }\n            },forceRequest,serverContext);\n        }\n    }\n    PUT(obj:DataObj,done:(err:string,newObj:DataObj)=>void,serverContext:ServerContext){\n \n        let key = obj._key;\n        let dbo = this.db.db(this.dbName);\n        let jsonObj = obj.toJSON();\n        if (key){\n            // do an update\n            let collCode = DataSource.collectionFromKey(key);\n            let collName:string = DataObj.classInfo[collCode].className;\n            let id = DataSource.idFromKey(key);\n            let idQuery = { _id:new mongo.ObjectID(id) };\n            try{\n                dbo.collection(collName).replaceOne(idQuery,jsonObj,(err,res)=>{\n                    if (err){\n                        done(err,null);\n                    } else {\n                        done(null,obj);\n                    }\n                });\n            } catch (e){\n                done(e.toString(),null);\n            }\n\n        } else {\n            // do an insert\n            let typeCode = obj.getTypeCode();\n            let collCode:string = DataObj.typeToCollection(typeCode);\n            let collName:string = DataObj.classInfo[collCode].className;\n            dbo.collection(collName).insertOne(jsonObj,(err,res)=>{\n                if (err) {\n                    done(err,null);\n                } else {\n                    let newId = res.insertedId;\n                    obj._key = obj.getTypeCode()+\"_\"+newId;\n                    obj.dataSource=this;\n                    done(null,obj);\n                }\n            })\n        }\n    }\n    private static maxBlobSize=1000000;\n    PUTFileBlob(file:File,serverContext:ServerContext,done:(err:string,blobKey:string)=>void){\n        \n        try {\n            let data = fs.readFileSync((<any>file).path);\n            //let dataStr=data.toString();\n            //DB.msg(\"dataStr\",dataStr);\n            this.putDataBlob(data,file.name,file.type,(err:string,blobid:string)=>{\n                if (err){\n                    done(err,null);\n                } else {\n                    let fName = file.name;\n                    let fNameParts = fName.split(\".\")\n                    let key = \"BLOB_\"+blobid;\n                    if (fNameParts.length>1){\n                        key+=\".\"+fNameParts[1];\n                    }\n                    done(null,key)\n                }\n            })\n        } catch(e){}\n    }\n    PUTBlob(blob:Blob,name:string,serverContext:ServerContext,done:(err:string,blobKey:string)=>void){\n        try {\n            (<any>blob).arrayBuffer().then((buffer:Buffer)=>{\n                this.putDataBlob(buffer,name,blob.type,(putDBErr:string,blobid:string)=>{\n                    if (putDBErr){\n                        done(putDBErr,null);\n                    } else {\n                        let key=\"BLOB_\"+blobid;\n                        done(null,key);\n                    }\n                })\n            })\n        }catch(e){}\n    }\n    private putDataBlob(data:Buffer,fileName:string,fileType:string,done:(err:string,blobid:string)=>void){\n        if (data.length>MongoDataSource.maxBlobSize){\n            let dataFirst = data.slice(0,MongoDataSource.maxBlobSize);\n            let dataRest = data.slice(MongoDataSource.maxBlobSize);\n            this.putDataBlob(dataRest,fileName,fileType,(err:string,restBlobId:string)=>{\n                if (err){\n                    done(err,null);\n                } else {\n                    this.doMongoBlobPut(dataFirst,fileName,fileType,restBlobId,done);\n                }\n            })\n        } else {\n            this.doMongoBlobPut(data,fileName,fileType,null,done)\n        }\n    }\n    private doMongoBlobPut(data:Buffer,fileName:string,fileType:string,nextBlobId:string,done:(err:string,blobid:string)=>void){\n        let dbo=this.db.db(this.dbName);\n        let insertData:BlobStoreRec = { \n                name:fileName, type:fileType, \n                nextBlob:nextBlobId, \n                data: Binary(data)};\n\n        dbo.collection(\"BLOB\").insertOne(insertData,(err:string,rslt:any)=>{\n            if (err){\n                done(err,null);\n            } else {\n                let obj = rslt.ops[0];\n                let blobId=obj._id.toString();\n                done(null,blobId);\n            }\n        })\n    }\n    GETBlob(blobKey:string,serverContext:ServerContext,\n                done:(err:string,blobData:BlobStoreRec)=>void){\n        let id = blobKey.split(\"_\")[1];\n        let idParts = id.split(\".\");\n        if (idParts.length>1)\n            id = idParts[0];\n        this.getMongoBlob(id,(err:string,fileName:string,fileType:string,buffers:Buffer[])=>{\n            \n            if (err)\n                done(err,null);\n            else {\n                let dataBuffer = Buffer.concat(buffers);\n                let rsltData:BlobStoreRec = {\n                    name:fileName,\n                    type:fileType,\n                    data: new Binary(dataBuffer),\n                    _key:blobKey\n                }\n                done(null,rsltData);\n            }\n        })\n    }\n    private getMongoBlob(id:string,done:(err:string,fileName:string,fileType:string,buffers:Buffer[])=>void){\n        let getObj = { _id:new mongo.ObjectID(id) };\n        let dbo=this.db.db(this.dbName);\n        dbo.collection(\"BLOB\").findOne(getObj,(err,res)=>{\n            if (err) {\n                done(err,null,null,null);\n            } else if (res){\n                let firstData:Buffer = res.data.buffer;\n                if (res.nextBlob){\n                    this.getMongoBlob(res.nextBlob,(nErr:string,nFn:string,nFt:string,nBuffers:Buffer[])=>{\n                        if (nErr)\n                            done(nErr,null,null,null);\n                        else {\n                            let newBuffers:Buffer[] = [firstData].concat(nBuffers);\n                            done(null,nFn,nFt,newBuffers);\n                        }\n                    })\n                } else {\n                    done(null,res.name,res.type,[firstData])\n                }\n            } else {\n                done(\"No such object for \"+id,null,null,null)\n            }\n        })\n    }\n \n    PUTm(objs:DataObj[],done:(err:string,newObjs:DataObj[])=>void,serverContext:ServerContext){\n        this.multiPut(0,objs,[],done,serverContext);\n\n    }\n    private multiPut(idx:number,objs:DataObj[],rslt:DataObj[],done:(err:string,newObjs:DataObj[])=>void,serverContext:ServerContext){\n        \n        let _this=this;\n        if (idx>=objs.length){\n            done(null,rslt);\n        } else {\n            this.PUT(objs[idx],(err:string,data:DataObj)=>{\n                if (err){\n                    done(err,rslt);\n                } else {\n                    rslt.push(data);\n                    data.dataSource=_this;\n                    this.multiPut(idx+1,objs,rslt,done,serverContext);\n                }\n            },null)\n        }\n    }\n    DELETE(key:string,done?:(err:string)=>void){\n        let collectionKey = DataSource.collectionFromKey(key);\n        let collName:string = DataObj.classInfo[collectionKey].className;\n        let id = DataSource.idFromKey(key);\n        let dbo = this.db.db(this.dbName);\n        let myQuery = { _id:mongo.ObjectID(id) };\n        dbo.collection(collName).deleteOne(myQuery,(err,obj)=>{\n            if (err) {\n                if (done) done(err);\n            } else {\n                if (done) done(null);\n            }\n        })\n    }\n    FIND(typeCode:string, search:Query,done:(err:string,keys:string[],obj:DataObj[])=>void,\n            keysOnly:boolean,forceRequest:boolean,serverContext:ServerContext){\n        let collCode = DataObj.typeToCollection(typeCode);\n        let collName:string = DataObj.classInfo[collCode].className;\n        let dbo = this.db.db(this.dbName);\n        let mongoSearch = this.dataSearchToMongo(collCode,search);\n        \n        dbo.collection(collName).find(mongoSearch, { projection:{ _id:1, _t_: 1 }}).toArray((err,res)=>{\n            //DB.msg(`${collCode} ${collName}`,mongoSearch)\n            if (err) {\n                done(err,null,null);\n            } else {\n                let rslt:string[] = [];\n                for (let i in res){\n                    let key = res[i]._t_+\"_\"+res[i]._id;\n                    rslt.push(key);\n                }\n                if (keysOnly){\n                    done(null,rslt,[]);\n                } else {\n                    let dObjs:DataObj[] = [];\n                    this.getFromKeys(rslt,0,dObjs,(objs:DataObj[])=>{\n                        done(null,rslt,objs);\n                    },serverContext);\n                }\n            }\n        });\n    }\n    dataSearchToMongo(collectionCode:string,ds:Query):{}{\n        return ds.toMongo();\n        /*let ms:MongoSearchSpec = {};\n        for (let field in ds){\n            let fss = ds[field];\n            let isList = DataObj.classInfo[collectionCode].fields[field].isList;\n            let isDict = DataObj.classInfo[collectionCode].fields[field].isDict;\n            if (fss){\n                switch(typeof fss){\n                    case \"string\":\n                    case \"number\":\n                    case \"boolean\":\n                        if (isList){\n                            let s:MongoListSearchSpec = { $elemMatch:{$eq:fss}};\n                            ms[field]=s;\n                        } else {\n                            ms[field]=fss;\n                        }\n                        break;\n                    default: //DataSearchRangeSpec\n                        let s:MongoRangeSearchSpec={};\n                        let from = (<any>fss).from;\n                        if (from)\n                            s.$gte = from;\n                        let to = (<any>fss).to;\n                        if (to)\n                            s.$lte = to;\n                        if (isList){\n                            let ls:MongoListSearchSpec = {$elemMatch:s};\n                            ms[field]=ls;\n                        } else {\n                            ms[field]=s;\n                        }\n                        break;\n                }\n            }\n        }\n        return ms;*/\n    }\n}\ntype MongoRangeSearchSpec = { $gte?: number | string, $lte?: number | string};\ntype MongoItemEqual = {$eq: string | number | boolean }\ntype MongoListSearchSpec = { $elemMatch: MongoItemEqual | MongoRangeSearchSpec};\ntype MongoSearchSpec = { [fieldName:string]:string | number | boolean | MongoListSearchSpec | MongoRangeSearchSpec};","// <reference path=\"../zui/PageManager.ts\"/>\n\n\nabstract class ZingEnv{\n    env:any;\n    constructor(){\n        this.env={\n            serverPort:process.env.serverPort,\n            mongoHost:process.env.mongoHost,\n            mongoCredentials:process.env.mongoCredentials,\n            mongoPort:process.env.mongoPort,\n            mongoDB:process.env.mongoDB,\n            https:process.env.https\n        }\n    }\n    abstract indexHTML():string;\n    abstract pageHTML(root:string,pageName:string):string;\n\n    serverPort():number{\n        return parseInt(this.env.serverPort)\n    }\n\n    mongoHost():string{\n        return this.env.mongoHost;\n    }\n\n    mongoCredentials():string{\n        return this.env.mongoCredentials;\n    }\n\n    mongoPort():number{\n        return parseInt(this.env.mongoPort);\n    }\n\n    mongoDB():string{\n        return this.env.mongoDB;\n    }\n \n    serverStartNotice(){\n        DB.msg(`START SERVER @ ${this.serverPort()}`);\n        let cred = this.mongoCredentials();\n        if (!cred) \n            cred=\"\";\n        else\n            cred=\"user:pass@\"\n        DB.msg(`MONGO @ ${cred}${this.mongoHost()}:${this.mongoPort()}/${this.mongoDB()}`)\n    }\n    httpsServer():string{\n        return this.env.https;\n    }\n}","/// <reference path=\"MongoDataSource.ts\"/>\n/// <reference path=\"ZingEnv.ts\"/>\n\nconst  express = require('express');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\nconst formidable = require('formidable');\nconst https = require('https');\n\n\nclass ZingExpress {\n    app:any;\n    express;\n    dataSource:DataSource;\n    env:ZingEnv\n    constructor(dataSource:DataSource,env:ZingEnv){\n        this.dataSource=dataSource;\n        this.env=env;\n        this.setupServer();\n    }\n    extractQuery(query:any):any {\n        let rslt:any = {};\n        for ( let key in query){\n            if (key!=\"keysonly\"){\n                let val = decodeURI(query[key]);\n                rslt[key]=JSON.parse(val);\n                /*if (val.indexOf(`\"`)==0){\n                    val = val.substring(1,val.length-1);\n                    if (val.indexOf(`{`)==0){\n                        rslt[key] = this.parseRange(val);\n                    } else {\n                        rslt[key] = val;\n                    } \n                } else if (val.indexOf(`{`)==0){\n                    //rslt[key] = this.parseRange(val);\n                } else {\n                    switch(val){\n                        case \"true\":\n                            rslt[key]=true;\n                            break;\n                        case \"false\":\n                            rslt[key]=false;\n                            break;\n                        default:\n                            rslt[key] = Number.parseFloat(val);\n                            break;\n                    }\n                    \n                }*/\n            } else {\n                rslt.keysonly=query.keysonly;\n            }\n        }\n        return rslt;\n    }\n    private parseRange(val:string):{}{\n        let rslt:{from?:any,to?:any} = {};\n        let str = val.substring(1,val.length-1);\n        let parts = str.split(\",\");\n        let aParts = parts[0].split(\":\");\n        rslt[aParts[0]]=this.queryVal(aParts[1]);\n        if (parts.length>1){\n            aParts = parts[1].trim().split(\":\");\n            rslt[aParts[0]]=this.queryVal(aParts[1]);\n        }\n        return rslt;\n    }\n    private queryVal(val:string):any{\n        if (val.indexOf(`\"`)==0){\n            return val.substring(1,val.length-1);\n        } else if (val==\"true\"){\n            return true;\n        } else if (val==\"false\"){\n            return false;\n        } else {\n            return Number.parseInt(val);\n        }\n    }\n    private httpDebugMsg(req,res,next){\n        let request:string = `${req.method}: \"${req.protocol}://${req.hostname}${req.originalUrl}\" `;\n        DB.msg(request);\n        next();\n    }\n    private noCache(req,res,next){\n        res.set('Cache-Control','public,max-age=0');\n        next();\n    }\n    private setupServer(){\n        this.app = express();\n        //let ds = new MemDataSource();\n        let ds = this.dataSource;\n        this.app.use(bodyParser.urlencoded({ extended:false, limit:'50mb'}));\n        this.app.use(bodyParser.json({limit:'50mb'}));\n        this.app.use(cookieParser());\n\n        this.app.use(this.httpDebugMsg) // debugging assistance\n        this.app.use(this.noCache) // defeat all caching\n\n\n        this.app.get('/',(req,res)=>{\n            res.send(this.env.indexHTML())\n            //res.sendFile(__dirname+\"/war/index.html\");\n        })\n        this.app.get('/data/get/*',(req,res)=>{\n            //console.log(\"get request url\",req.url);\n            //console.log(\"      request params\",req.params);\n            //console.log(\"      request query\",req.query);\n\n            let key = req.params[0];\n            let sc = new ServerContext(req,res);\n            ds.canGet(key,sc,(granted:boolean)=>{\n                if (granted){\n                    ds.GET(key,(err:string,data:DataObj)=>{\n                        if (err){\n                            res.status(204).send();\n                        } else {\n                            let fdata = this.doGetFilter(data);\n                            let j = fdata.toJSON();\n                            let js= JSON.stringify(j);\n                            res.status(200).send(js);\n                        }\n                    },false,sc)\n                }\n            })\n            \n        });\n        this.app.post('/data/getm',(req,res)=>{\n            //console.log(\"getm request url\",req.url);\n            let rslt = req.body;\n            let keys:string[] = req.body.keys;\n            //console.log(\"      request body\",keys);\n            let sc = new ServerContext(req,res);\n            ds.canGETm(keys,sc,(granted:boolean)=>{\n                if (granted){\n                    ds.GETm(keys,(err:string,data:DataObj[])=>{\n                        if (err){\n                            res.status(200).send(\"[]\");\n                        } else {\n                            let rslt = [];\n                            for (let i in data){\n                                let obj = data[i];\n                                let fobj = this.doGetFilter(obj);\n                                rslt.push(fobj.toJSON());\n                            }\n                            let js=JSON.stringify(rslt);\n                            res.status(200).send(js);\n                        }\n                    },false,sc)\n                }\n            })\n        })\n        this.app.post('/data/put/*',(req,res)=>{\n            //console.log(\"put request url\",req.url);\n            let key = req.params[0];\n            let b = req.body;\n\n            //console.log(\"      request body\",req.body);\n            let tc = req.body._t_;\n            let obj = DataObj.make(tc,req.body);\n            \n            let sc = new ServerContext(req,res);\n            obj.PUT((err:string,newObj:DataObj)=>{\n                if (err){\n                    this.sendErr(res,err);\n                } else {\n                    let j = newObj.toJSON();\n                    let js = JSON.stringify(j);\n                    res.status(200).send(js);\n                }\n            },sc)\n        });\n        this.app.post(\"/createuser\",(req,res)=>{\n            let q = this.extractQuery(req.query);\n            let password = q.password;\n            let userDesc = req.body;\n            let rm = ds.getRightsManager();\n            let um = rm.userManager;\n            let sc = new ServerContext(req,res);\n            um.createUser(userDesc,password,(err:string)=>{\n                if (err){\n                    this.sendErr(res,err);\n                } else {\n                    res.status(200).send(\"\");\n                }\n            },sc)\n            console.log(\"createuser\")\n        })\n        this.app.post('/data/putm',(req,res)=>{\n            //console.log(\"putm request url\",req.url);\n            let jsonObjs = req.body;\n\n            //console.log(\"      request body\",jsonObjs);\n            let reqObjs:DataObj[] = [];\n            for (let i in jsonObjs){\n                let json = jsonObjs[i];\n                let obj = DataObj.make(null,json);\n                reqObjs.push(obj);\n            }\n\n            let sc = new ServerContext(req,res);\n            ds.canPUTm(reqObjs,sc,(granted:boolean)=>{\n                if (granted){\n                    ds.PUTm(reqObjs,(err:string,newObjs:DataObj[])=>{\n                        if (err){\n                            this.sendErr(res,err);\n                        } else {\n                            let rslt = [];\n                            for (let i in newObjs){\n                                let obj = newObjs[i];\n                                rslt.push(obj.toJSON());\n                            }\n                            let js=JSON.stringify(rslt);\n                            res.status(200).send(js);\n                        }\n                    },sc)\n                }\n            })\n            \n        })\n        \n        this.app.get('/data/find/*',(req,res)=>{\n            //console.log(\"find request url\",req.url);\n            let collectionCode = DataObj.typeToCollection(req.params[0]);\n            //console.log(\"     collection\",collectionCode);\n            //console.log(\"     query\",req.query);\n            let search = this.extractQuery(req.query);\n            let sc = new ServerContext(req,res);\n            let keysOnly=false;\n            if (req.query.keysonly){\n                keysOnly=true;\n            }\n            let searchQuery = Query.fromJSON(search.q);\n            ds.canFIND(collectionCode,<Query>searchQuery,sc,(granted:boolean)=>{\n                if (granted){\n                    ds.FIND(collectionCode,<Query>searchQuery,(err:string,keys:string[],objs:DataObj[])=>{\n                        let filteredKeys = DataSource.filterKeyList(collectionCode,keys);\n                        if (err){\n                            this.sendErr(res,err);\n                        } else {\n                            let rslt = {keys:filteredKeys, objs:objs};\n                            let js = JSON.stringify(rslt);\n                            res.status(200).send(js);\n                        }\n                    },keysOnly,false,sc)\n                } else {\n                    this.sendErr(res,\"Find failed rights check\");\n                }\n            })\n            \n        })\n        this.app.get('/login',(req,res)=>{\n            let rm = ds.getRightsManager();\n            let um = rm.userManager;\n            let q = this.extractQuery(req.query);\n            let userName = q.userName;\n            let password = q.password;\n            console.log(\"login\",userName);\n            um.serverSideLogin(userName,password,new ServerContext(req,res),(err:string,user:DataObj)=>{\n                if (err){\n                    this.sendErr(res,err);\n                } else {\n                    let json = user.toJSON();\n                    let stJson = JSON.stringify(json);\n                    res.status(200).send(stJson);\n                }\n            })\n        })\n        this.app.get('/logout',(req,res)=>{\n            let rm = ds.getRightsManager();\n            let um = rm.userManager;\n            console.log(\"logout\");\n            um.serverSideLogout(new ServerContext(req,res),(err:string)=>{\n                if (err){\n                    this.sendErr(res,err);\n                } else {\n                    res.status(200).send(\"logout\");\n                }\n            })\n        })\n        this.app.get('/blob/:key',(req,res)=>{\n            let key = req.params.key;\n            DB.msg(\"GET blob\",key);\n            let sc = new ServerContext(req,res);\n            ds.canGETBlob(key,sc,(granted:boolean)=>{\n                if (granted){\n                    ds.GETBlob(key,sc,(err:string,blob:BlobStoreRec)=>{\n                        if (err){\n                            this.sendErr(res,err);\n                        } else {\n                            let type = blob.type;\n                            res.set(\"Content-Type\",type).send(blob.data.buffer);\n                        }\n                    })\n                }\n            })\n            \n        })\n        this.app.post('/blob',(req,res)=>{\n            let form = new formidable.IncomingForm()\n            form.parse(req,(err,fields,files)=>{\n                DB.msg(\"fields\",fields);\n                DB.msg(\"files\",files);\n                if (files){\n                    let sc = new ServerContext(req,res);\n                    let data = null;\n                    if (files.file){\n                        data = files.file;\n                    } else {\n                        data = files.data;\n                    }\n                    if (data){\n                        ds.canPUTBlob(sc,(granted:boolean)=>{\n                            if (granted){\n                                ds.PUTFileBlob(data,sc,(err:string,blobKey:string)=>{\n                                    res.json({ blobKey:blobKey });\n                                })\n                            } else {\n                                this.sendErr(res,\"PutFileBlob permission failure\")\n                            }\n                        })\n                        \n                    } else {\n                        this.sendErr(res,\"PutFileBlob blob no data in files\")\n                    }\n                }  else {\n                    this.sendErr(res,\"No files present\");\n                }\n            })\n\n        })\n        this.app.delete('/data/delete/*',(req,res)=>{\n            //console.log(\"delete  request url\",req.url);\n            let parts:string[] = req.url.split(\"/delete/\");\n\n            let key = parts[1];\n            let sc = new ServerContext(req,res);\n            ds.canDELETE(key,sc,(granted:boolean)=>{\n                if (granted){\n                    ds.DELETE(key,(err:string)=>{\n                        if (err)\n                            this.sendErr(res,err);\n                        else{\n                            res.status(200).send();\n                        }\n                    })\n                }\n            })\n            \n            \n        })\n        this.app.get('*/pg/*',(req,res)=>{\n            let parts:string[] = req.url.split(\"/pg/\");\n            let root=parts[0];\n            if (root[0]==\"/\"){\n                root = root.substring(1);\n            }\n            let page=parts[1];\n            //DB.msg(`url=${req.url} dir=${__dirname} root=\"${root}\" page=\"${page}\"`);\n            //res.sendFile(__dirname+`/war/${root}/pagehandler.html`)\n            //res.sendFile(__dirname+\"/war/index.html\")\n            res.send(this.env.pageHTML(root,page));\n        })\n        this.app.use(express.static(__dirname + '/war'));\n    }\n    private sendErr(res,msg:string){\n        res.status(400).send(msg);\n    }\n    private doGetFilter_:(data:DataObj)=>DataObj = (obj:DataObj)=>{ return obj;}\n    private doGetFilter(data:DataObj):DataObj {\n        return this.doGetFilter_(data);\n    }\n    set getFilter(filterFunction:(obj:DataObj)=>DataObj){\n        this.doGetFilter_=filterFunction;\n    }\n    \n    get(pattern:string,handler:(req,res)=>void){\n        this.app.get(pattern,handler);\n    }\n    post(pattern:string,handler:(req,res)=>void){\n        this.app.post(pattern,handler);\n    }\n    listen(portNumber){\n        let httpsServer = this.env.httpsServer();\n        if (httpsServer){\n            let cert = {\n                key: fs.readFileSync(`${httpsServer}.key`),\n                cert: fs.readFileSync(`${httpsServer}.crt`)\n            }\n            let httpsApp = https.createServer(cert,this.app);\n            httpsApp.listen(portNumber,()=>{\n                DB.msg(\"start https\");\n            })\n        } else {\n            this.app.listen(portNumber);\n        }\n        \n    }\n}","\nclass ZPerson extends DataObj{\n   protected FirstName_:string;\n   protected LastName_:string;\n   protected Email_:string;\n   protected Phone_:string;\n   constructor(json:any){\n      super(json);\n      if (json.FirstName){\n         this.FirstName_=json.FirstName;\n      }\n      if (json.LastName){\n         this.LastName_=json.LastName;\n      }\n      if (json.Email){\n         this.Email_=json.Email;\n      }\n      if (json.Phone){\n         this.Phone_=json.Phone;\n      }\n   }\n   getTypeCode():string { return 'P';}\n   getFirstName():string {\n      return this.FirstName_;\n   }\n   setFirstName(newVal: string) {\n      if (this.FirstName_ != newVal){\n         this.FirstName_=newVal;\n         this.touch();\n      }\n   }\n   getLastName():string {\n      return this.LastName_;\n   }\n   setLastName(newVal: string) {\n      if (this.LastName_ != newVal){\n         this.LastName_=newVal;\n         this.touch();\n      }\n   }\n   getEmail():string {\n      return this.Email_;\n   }\n   setEmail(newVal: string) {\n      if (this.Email_ != newVal){\n         this.Email_=newVal;\n         this.touch();\n      }\n   }\n   getPhone():string {\n      return this.Phone_;\n   }\n   setPhone(newVal: string) {\n      if (this.Phone_ != newVal){\n         this.Phone_=newVal;\n         this.touch();\n      }\n   }\n   static GET(key:string,done:(err:string,data:Person)=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('P',tc)){ done(\"ERR wrong key \"+key+\" for Person.GET\",null);return}\n      super.GET(key,(err:string,data:DataObj)=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Person>data);\n         }\n      },forceRequest,serverContext)\n   }\n   static cGET(key:string,forceRequest?:boolean):Person{\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('P',tc)){ DB.msg(\"ERR wrong key \"+key+\" for Person.GET\",null); return null}\n      return <Person>(super.cGET(key,forceRequest));\n   }\n   static GETm(keys:string[],done:(err:string,data:Person[])=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      if (!keys || keys.length==0){\n         done(null,[])\n         return\n      }\n      let tc=DataSource.typeFromKey(keys[0]);\n      if (!DataObj.checkTypeCode('P',tc)){ done(\"ERR wrong key \"+keys[0]+\" for Person.GETm\",null); return}\n      super.GETm(keys,(err:string,data:DataObj[])=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Person[]>data);\n         }\n      },forceRequest,serverContext)\n   }\n   toJSON():any{\n      let rslt:any = {};\n      rslt._key=this._key\n      rslt._t_=\"P\";\n      rslt.FirstName=this.getFirstName();\n      rslt.LastName=this.getLastName();\n      rslt.Email=this.getEmail();\n      rslt.Phone=this.getPhone();\n      return rslt;\n   }\n   \n   static byName(FirstName:StringQuery,LastName:StringQuery,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"P\",Query.dict({FirstName:FirstName ,LastName:LastName }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byNameC(FirstName:StringQuery,LastName:StringQuery,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"P\",Query.dict({FirstName:FirstName ,LastName:LastName }),keysOnly,forceRequest)\n   }\n}\n","/// <reference path=\"ZPerson.ts\" />\n\nclass Person extends ZPerson {\n  getFullName() {\n    if (this.getFirstName() && this.getLastName()) {\n      return `${this.getFirstName()} ${this.getLastName()}`\n    }\n  }\n\n  getDescription(includeEmail: boolean = false) {\n    if (includeEmail && this.getEmail()) {\n      return `${this.getFullName()} (${this.getEmail()})`;\n    }\n    return this.getFullName()\n  }\n\n  static allPersons(): string[] {\n    return super.cFIND(\"P\", Query.dict({}), false, false);\n  }\n}","/// <reference path=\"Person.ts\"/>\n\nclass ZTeam extends DataObj{\n   protected TeamName_:string;\n   protected SeasonLabel_:string;\n   protected Coach_:string;\n   protected AssistantCoach_:string;\n   protected TeamManager_:string;\n   constructor(json:any){\n      super(json);\n      if (json.TeamName){\n         this.TeamName_=json.TeamName;\n      }\n      if (json.SeasonLabel){\n         this.SeasonLabel_=json.SeasonLabel;\n      }\n      if (json.Coach){\n         this.Coach_=json.Coach;\n      } else {\n         this.Coach_=null;\n      }\n      if (json.AssistantCoach){\n         this.AssistantCoach_=json.AssistantCoach;\n      } else {\n         this.AssistantCoach_=null;\n      }\n      if (json.TeamManager){\n         this.TeamManager_=json.TeamManager;\n      } else {\n         this.TeamManager_=null;\n      }\n   }\n   getTypeCode():string { return 'T';}\n   getTeamName():string {\n      return this.TeamName_;\n   }\n   setTeamName(newVal: string) {\n      if (this.TeamName_ != newVal){\n         this.TeamName_=newVal;\n         this.touch();\n      }\n   }\n   getSeasonLabel():string {\n      return this.SeasonLabel_;\n   }\n   setSeasonLabel(newVal: string) {\n      if (this.SeasonLabel_ != newVal){\n         this.SeasonLabel_=newVal;\n         this.touch();\n      }\n   }\n   getCoach():string {\n      return this.Coach_;\n   }\n   setCoach(newVal: string) {\n      if (this.Coach_ != newVal){\n         this.Coach_=newVal;\n         this.touch();\n      }\n   }\n   getAssistantCoach():string {\n      return this.AssistantCoach_;\n   }\n   setAssistantCoach(newVal: string) {\n      if (this.AssistantCoach_ != newVal){\n         this.AssistantCoach_=newVal;\n         this.touch();\n      }\n   }\n   getTeamManager():string {\n      return this.TeamManager_;\n   }\n   setTeamManager(newVal: string) {\n      if (this.TeamManager_ != newVal){\n         this.TeamManager_=newVal;\n         this.touch();\n      }\n   }\n   static GET(key:string,done:(err:string,data:Team)=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('T',tc)){ done(\"ERR wrong key \"+key+\" for Team.GET\",null);return}\n      super.GET(key,(err:string,data:DataObj)=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Team>data);\n         }\n      },forceRequest,serverContext)\n   }\n   static cGET(key:string,forceRequest?:boolean):Team{\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('T',tc)){ DB.msg(\"ERR wrong key \"+key+\" for Team.GET\",null); return null}\n      return <Team>(super.cGET(key,forceRequest));\n   }\n   static GETm(keys:string[],done:(err:string,data:Team[])=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      if (!keys || keys.length==0){\n         done(null,[])\n         return\n      }\n      let tc=DataSource.typeFromKey(keys[0]);\n      if (!DataObj.checkTypeCode('T',tc)){ done(\"ERR wrong key \"+keys[0]+\" for Team.GETm\",null); return}\n      super.GETm(keys,(err:string,data:DataObj[])=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Team[]>data);\n         }\n      },forceRequest,serverContext)\n   }\n   toJSON():any{\n      let rslt:any = {};\n      rslt._key=this._key\n      rslt._t_=\"T\";\n      rslt.TeamName=this.getTeamName();\n      rslt.SeasonLabel=this.getSeasonLabel();\n      rslt.Coach=this.getCoach();\n      rslt.AssistantCoach=this.getAssistantCoach();\n      rslt.TeamManager=this.getTeamManager();\n      return rslt;\n   }\n   \n   static byName(TeamName:StringQuery,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"T\",Query.dict({TeamName:TeamName }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byNameC(TeamName:StringQuery,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"T\",Query.dict({TeamName:TeamName }),keysOnly,forceRequest)\n   }\n}\n","/// <reference path=\"ZTeam.ts\" />\n\nclass Team extends ZTeam {\n\n  static makeNew(name: string,\n    done: (err: string, team: Team) => void) {\n    let newTeam = new Team({ TeamName: name });\n    newTeam.PUT((err: string, team: Team) => {\n      done(err, team);\n    })\n  }\n\n\n  static allTeams(): string[] {\n    return super.cFIND(\"T\", Query.dict({}), false, false);\n  }\n}","/// <reference path=\"Person.ts\"/>\n\nclass ZPlayer extends DataObj{\n   protected Person_:string;\n   protected JerseyNumber_:number;\n   protected Position_:string;\n   protected SecondaryPosition_:string;\n   constructor(json:any){\n      super(json);\n      if (json.Person){\n         this.Person_=json.Person;\n      } else {\n         this.Person_=null;\n      }\n      if (json.JerseyNumber){\n         this.JerseyNumber_=json.JerseyNumber;\n      } else {\n         this.JerseyNumber_=0;\n      }\n      if (json.Position){\n         this.Position_=json.Position;\n      }\n      if (json.SecondaryPosition){\n         this.SecondaryPosition_=json.SecondaryPosition;\n      }\n   }\n   getTypeCode():string { return 'PL';}\n   getPerson():string {\n      return this.Person_;\n   }\n   setPerson(newVal: string) {\n      if (this.Person_ != newVal){\n         this.Person_=newVal;\n         this.touch();\n      }\n   }\n   getJerseyNumber():number {\n      return this.JerseyNumber_;\n   }\n   setJerseyNumber(newVal: number) {\n      if (this.JerseyNumber_ != newVal){\n         this.JerseyNumber_=newVal;\n         this.touch();\n      }\n   }\n   getPosition():string {\n      return this.Position_;\n   }\n   setPosition(newVal: string) {\n      if (this.Position_ != newVal){\n         this.Position_=newVal;\n         this.touch();\n      }\n   }\n   getSecondaryPosition():string {\n      return this.SecondaryPosition_;\n   }\n   setSecondaryPosition(newVal: string) {\n      if (this.SecondaryPosition_ != newVal){\n         this.SecondaryPosition_=newVal;\n         this.touch();\n      }\n   }\n   static GET(key:string,done:(err:string,data:Player)=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('PL',tc)){ done(\"ERR wrong key \"+key+\" for Player.GET\",null);return}\n      super.GET(key,(err:string,data:DataObj)=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Player>data);\n         }\n      },forceRequest,serverContext)\n   }\n   static cGET(key:string,forceRequest?:boolean):Player{\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('PL',tc)){ DB.msg(\"ERR wrong key \"+key+\" for Player.GET\",null); return null}\n      return <Player>(super.cGET(key,forceRequest));\n   }\n   static GETm(keys:string[],done:(err:string,data:Player[])=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      if (!keys || keys.length==0){\n         done(null,[])\n         return\n      }\n      let tc=DataSource.typeFromKey(keys[0]);\n      if (!DataObj.checkTypeCode('PL',tc)){ done(\"ERR wrong key \"+keys[0]+\" for Player.GETm\",null); return}\n      super.GETm(keys,(err:string,data:DataObj[])=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Player[]>data);\n         }\n      },forceRequest,serverContext)\n   }\n   toJSON():any{\n      let rslt:any = {};\n      rslt._key=this._key\n      rslt._t_=\"PL\";\n      rslt.Person=this.getPerson();\n      rslt.JerseyNumber=this.getJerseyNumber();\n      rslt.Position=this.getPosition();\n      rslt.SecondaryPosition=this.getSecondaryPosition();\n      return rslt;\n   }\n   \n   static byPerson(Person:string,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"PL\",Query.dict({Person:Person }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byPersonC(Person:string,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"PL\",Query.dict({Person:Person }),keysOnly,forceRequest)\n   }\n   \n   static byNumber(JerseyNumber:NumberQuery,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"PL\",Query.dict({JerseyNumber:JerseyNumber }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byNumberC(JerseyNumber:NumberQuery,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"PL\",Query.dict({JerseyNumber:JerseyNumber }),keysOnly,forceRequest)\n   }\n}\n","/// <reference path=\"ZPlayer.ts\" />\n\nclass Player extends ZPlayer {\n\n}","/// <reference path=\"Player.ts\"/>\n\nclass ZGameEvent extends DataObj{\n   protected EventType_:string;\n   protected Time_:number;\n   protected Player_:string;\n   protected HomeScoreIncreased_:boolean;\n   protected AwayScoreIncreased_:boolean;\n   constructor(json:any){\n      super(json);\n      if (json.EventType){\n         this.EventType_=json.EventType;\n      }\n      if (json.Time){\n         this.Time_=json.Time;\n      } else {\n         this.Time_=0;\n      }\n      if (json.Player){\n         this.Player_=json.Player;\n      } else {\n         this.Player_=null;\n      }\n      this.HomeScoreIncreased_=json.HomeScoreIncreased;\n      this.AwayScoreIncreased_=json.AwayScoreIncreased;\n   }\n   getTypeCode():string { return 'GE';}\n   getEventType():string {\n      return this.EventType_;\n   }\n   setEventType(newVal: string) {\n      if (this.EventType_ != newVal){\n         this.EventType_=newVal;\n         this.touch();\n      }\n   }\n   getTime():number {\n      return this.Time_;\n   }\n   setTime(newVal: number) {\n      if (this.Time_ != newVal){\n         this.Time_=newVal;\n         this.touch();\n      }\n   }\n   getPlayer():string {\n      return this.Player_;\n   }\n   setPlayer(newVal: string) {\n      if (this.Player_ != newVal){\n         this.Player_=newVal;\n         this.touch();\n      }\n   }\n   getHomeScoreIncreased():boolean {\n      return this.HomeScoreIncreased_;\n   }\n   setHomeScoreIncreased(newVal: boolean) {\n      if (this.HomeScoreIncreased_ != newVal){\n         this.HomeScoreIncreased_=newVal;\n         this.touch();\n      }\n   }\n   getAwayScoreIncreased():boolean {\n      return this.AwayScoreIncreased_;\n   }\n   setAwayScoreIncreased(newVal: boolean) {\n      if (this.AwayScoreIncreased_ != newVal){\n         this.AwayScoreIncreased_=newVal;\n         this.touch();\n      }\n   }\n   toJSON():any{\n      let rslt:any = {};\n      rslt._t_=\"GE\";\n      rslt.EventType=this.getEventType();\n      rslt.Time=this.getTime();\n      rslt.Player=this.getPlayer();\n      rslt.HomeScoreIncreased=this.getHomeScoreIncreased();\n      rslt.AwayScoreIncreased=this.getAwayScoreIncreased();\n      return rslt;\n   }\n}\n","/// <reference path=\"ZGameEvent.ts\" />\n\nclass GameEvent extends ZGameEvent {\n\n\n}","/// <reference path=\"Team.ts\"/>\n/// <reference path=\"GameEvent.ts\"/>\n\nclass ZGame extends DataObj{\n   protected Team_:string;\n   protected HomeGame_:boolean;\n   protected Date_:string;\n   protected StartTime_:number;\n   protected EndTime_:number;\n   protected WinResult_:string;\n   protected GameEvents_:GameEvent[];\n   constructor(json:any){\n      super(json);\n      if (json.Team){\n         this.Team_=json.Team;\n      } else {\n         this.Team_=null;\n      }\n      this.HomeGame_=json.HomeGame;\n      if (json.Date){\n         this.Date_=json.Date;\n      }\n      if (json.StartTime){\n         this.StartTime_=json.StartTime;\n      } else {\n         this.StartTime_=0;\n      }\n      if (json.EndTime){\n         this.EndTime_=json.EndTime;\n      } else {\n         this.EndTime_=0;\n      }\n      if (json.WinResult){\n         this.WinResult_=json.WinResult;\n      }\n      if (json.GameEvents){\n         this.GameEvents_=<GameEvent[]>(DataObj.makeList('GE',json.GameEvents,this));\n      } else {\n         this.GameEvents_=[];\n      }\n   }\n   getTypeCode():string { return 'G';}\n   getTeam():string {\n      return this.Team_;\n   }\n   setTeam(newVal: string) {\n      if (this.Team_ != newVal){\n         this.Team_=newVal;\n         this.touch();\n      }\n   }\n   getHomeGame():boolean {\n      return this.HomeGame_;\n   }\n   setHomeGame(newVal: boolean) {\n      if (this.HomeGame_ != newVal){\n         this.HomeGame_=newVal;\n         this.touch();\n      }\n   }\n   getDate():string {\n      return this.Date_;\n   }\n   setDate(newVal: string) {\n      if (this.Date_ != newVal){\n         this.Date_=newVal;\n         this.touch();\n      }\n   }\n   getStartTime():number {\n      return this.StartTime_;\n   }\n   setStartTime(newVal: number) {\n      if (this.StartTime_ != newVal){\n         this.StartTime_=newVal;\n         this.touch();\n      }\n   }\n   getEndTime():number {\n      return this.EndTime_;\n   }\n   setEndTime(newVal: number) {\n      if (this.EndTime_ != newVal){\n         this.EndTime_=newVal;\n         this.touch();\n      }\n   }\n   getWinResult():string {\n      return this.WinResult_;\n   }\n   setWinResult(newVal: string) {\n      if (this.WinResult_ != newVal){\n         this.WinResult_=newVal;\n         this.touch();\n      }\n   }\n   getGameEvents():GameEvent[] {\n      let tmp:GameEvent[] = [];\n      for (let i in this.GameEvents_){\n         tmp.push(this.GameEvents_[i]);\n      }\n      return tmp;\n   }\n   setGameEvents(val: GameEvent[]) {\n      let tmp:GameEvent[] = [];\n      for (let i in val){\n         tmp.push(val[i]);\n         val[i].parent=this;\n      }\n      this.GameEvents_ = tmp;\n      this.touch();\n   }\n   static GET(key:string,done:(err:string,data:Game)=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('G',tc)){ done(\"ERR wrong key \"+key+\" for Game.GET\",null);return}\n      super.GET(key,(err:string,data:DataObj)=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Game>data);\n         }\n      },forceRequest,serverContext)\n   }\n   static cGET(key:string,forceRequest?:boolean):Game{\n      let tc=DataSource.typeFromKey(key);\n      if (!DataObj.checkTypeCode('G',tc)){ DB.msg(\"ERR wrong key \"+key+\" for Game.GET\",null); return null}\n      return <Game>(super.cGET(key,forceRequest));\n   }\n   static GETm(keys:string[],done:(err:string,data:Game[])=>void,forceRequest?:boolean,serverContext?:ServerContext){\n      if (!keys || keys.length==0){\n         done(null,[])\n         return\n      }\n      let tc=DataSource.typeFromKey(keys[0]);\n      if (!DataObj.checkTypeCode('G',tc)){ done(\"ERR wrong key \"+keys[0]+\" for Game.GETm\",null); return}\n      super.GETm(keys,(err:string,data:DataObj[])=>{\n         if (err){\n            done(err,null);\n         } else {\n            done(null,<Game[]>data);\n         }\n      },forceRequest,serverContext)\n   }\n   toJSON():any{\n      let rslt:any = {};\n      rslt._key=this._key\n      rslt._t_=\"G\";\n      rslt.Team=this.getTeam();\n      rslt.HomeGame=this.getHomeGame();\n      rslt.Date=this.getDate();\n      rslt.StartTime=this.getStartTime();\n      rslt.EndTime=this.getEndTime();\n      rslt.WinResult=this.getWinResult();\n      rslt.GameEvents=[];\n      let tmp_GameEvents=this.getGameEvents()\n      for (let i in tmp_GameEvents){\n         rslt.GameEvents.push((tmp_GameEvents[i]).toJSON());\n      }\n      return rslt;\n   }\n   \n   static byDate(Date:StringQuery,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"G\",Query.dict({Date:Date }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byDateC(Date:StringQuery,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"G\",Query.dict({Date:Date }),keysOnly,forceRequest)\n   }\n   \n   static byHome(HomeGame:boolean,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"G\",Query.dict({HomeGame:HomeGame }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byHomeC(HomeGame:boolean,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"G\",Query.dict({HomeGame:HomeGame }),keysOnly,forceRequest)\n   }\n   \n   static byWinResult(WinResult:StringQuery,done:(err:string,keys:string[])=>void,keysOnly?:boolean,forceRequest?:boolean,serverContext?:ServerContext){\n      super.FIND(\"G\",Query.dict({WinResult:WinResult }),done,keysOnly,forceRequest,serverContext)\n   }\n   \n   static byWinResultC(WinResult:StringQuery,keysOnly?:boolean,forceRequest?:boolean):string[]{\n      let ds = DataObj.globalSource;\n      return super.cFIND(\"G\",Query.dict({WinResult:WinResult }),keysOnly,forceRequest)\n   }\n}\n","/// <reference path=\"ZGame.ts\"/>\n\nclass Game extends ZGame {\n\n}","/// <reference path=\"Team.ts\"/>\n/// <reference path=\"Person.ts\"/>\n/// <reference path=\"Player.ts\"/>\n/// <reference path=\"Game.ts\"/>\n/// <reference path=\"GameEvent.ts\"/>\n\nfunction ZMake(expectedType:string,json:any):DataObj {\n   let type:string=json._t_;\n   if (!DataObj.checkTypeCode(expectedType,type)){\n      console.log('ERR expecting '+expectedType+' got '+type,json);\n      return null\n   }\n   if (!type){\n      type=expectedType;\n   }\n   switch(type){\n      \n      case \"T\":\n         return new Team(json);\n      case \"P\":\n         return new Person(json);\n      case \"PL\":\n         return new Player(json);\n      case \"G\":\n         return new Game(json);\n      case \"GE\":\n         return new GameEvent(json);\n      default:\n         console.log('ERR bad typeCode '+type+' on',json);\n         return null\n      \n   }\n   return null;\n}\nDataObj.make=ZMake;\nfunction ZMakeList(expectedType:string,json:any[],parent:DataObj):DataObj[] {\n   let rslt:DataObj[] = [];\n   for (let i in json){\n      let obj:DataObj = ZMake(expectedType,json[i]);\n      obj.parent=parent;\n      rslt.push(obj); \n   }\n   return rslt;\n}\nDataObj.makeList=ZMakeList;\nfunction ZMakeDict(expectedType:string,json:any,parent:DataObj):{[k:string]:DataObj} {\n   let rslt:{[k:string]:DataObj}={};\n   for (let k in json){\n      let obj:DataObj = ZMake(expectedType,json[k]);\n      obj.parent=parent;\n      rslt[k]=obj; \n   }\n   return rslt;\n}\nDataObj.makeDict=ZMakeDict;\n\nDataObj.classInfo={\n   \"T\":{ \"className\":\"Team\",\"superCode\":\"\", \"keyed\":true,\n      fields: {\n         TeamName:{ type:\"string\", isList:false, isDict:false},\n         SeasonLabel:{ type:\"string\", isList:false, isDict:false},\n         Coach:{ type:\"Person\", isList:false, isDict:false},\n         AssistantCoach:{ type:\"Person\", isList:false, isDict:false},\n         TeamManager:{ type:\"Person\", isList:false, isDict:false},\n      },\n   },\n   \"P\":{ \"className\":\"Person\",\"superCode\":\"\", \"keyed\":true,\n      fields: {\n         FirstName:{ type:\"string\", isList:false, isDict:false},\n         LastName:{ type:\"string\", isList:false, isDict:false},\n         Email:{ type:\"string\", isList:false, isDict:false},\n         Phone:{ type:\"string\", isList:false, isDict:false},\n      },\n   },\n   \"PL\":{ \"className\":\"Player\",\"superCode\":\"\", \"keyed\":true,\n      fields: {\n         Person:{ type:\"Person\", isList:false, isDict:false},\n         JerseyNumber:{ type:\"number\", isList:false, isDict:false},\n         Position:{ type:\"string\", isList:false, isDict:false},\n         SecondaryPosition:{ type:\"string\", isList:false, isDict:false},\n      },\n   },\n   \"G\":{ \"className\":\"Game\",\"superCode\":\"\", \"keyed\":true,\n      fields: {\n         Team:{ type:\"Team\", isList:false, isDict:false},\n         HomeGame:{ type:\"boolean\", isList:false, isDict:false},\n         Date:{ type:\"string\", isList:false, isDict:false},\n         StartTime:{ type:\"number\", isList:false, isDict:false},\n         EndTime:{ type:\"number\", isList:false, isDict:false},\n         WinResult:{ type:\"string\", isList:false, isDict:false},\n         GameEvents:{ type:\"GameEvent\", isList:true, isDict:false},\n      },\n   },\n   \"GE\":{ \"className\":\"GameEvent\",\"superCode\":\"\", \"keyed\":false,\n      fields: {\n         EventType:{ type:\"string\", isList:false, isDict:false},\n         Time:{ type:\"number\", isList:false, isDict:false},\n         Player:{ type:\"Player\", isList:false, isDict:false},\n         HomeScoreIncreased:{ type:\"boolean\", isList:false, isDict:false},\n         AwayScoreIncreased:{ type:\"boolean\", isList:false, isDict:false},\n      },\n   },\n}\n","/// <reference path=\"../aaswZing/Zing/data/ZingEnv.ts\"/>\n\nclass SoccerStatsEnv extends ZingEnv {\n  indexHTML(): string {\n    return `\n      <html>\n          <head>\n              <script\n                  src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n                  integrity=\"sha256-3edrmyuQ0w65f8gfBsqowzjJe2iM6n0nKciPUp8y+7E=\"\n                  crossorigin=\"anonymous\">\n              </script>\n              <link rel=\"stylesheet\" type=\"text/css\" href=\"/main.css\"/>\n          </head>\n          <body>\n              <div id=\"content\"></div>\n              <script src=\"/client.js\"></script>\n              <div id=\"modaloverlay\" class=\"hidden\"></div>\n          </body>\n      </html>\n      `\n  }\n  pageHTML(root: string, pageName: string): string {\n    return this.indexHTML();\n  }\n  serverPort() {\n    return parseInt(process.env.SERVER_PORT || \"4000\");\n  }\n  mongoDB(): string { return process.env.MONGO_DB_NAME; }\n  mongoCredentials(): string { return process.env.MONGO_DB_CREDS; }\n  mongoHost(): string { return process.env.MONGO_DB_HOST; }\n  mongoPort(): number { return parseInt(process.env.MONGO_DB_PORT || \"27017\"); }\n}","\n/// <reference path=\"../../aaswZing/Zing/data/RightsManager.ts\"/>\n/// <reference path=\"../../aaswZing/Zing/data/UserManager.ts\"/>\n\nclass AllRightsManager extends RightsManager {\n  constructor(dataSource: DataSource, userManager = new NoUserManager()) {\n    super(dataSource, userManager);\n  }\n  checkGET(key: string, serverContext: ServerContext, done: (granted: boolean) => void) {\n    done(true);\n  }\n\n  checkGETBlob(blobKey: string, serverContext, done: (granted: boolean) => void) {\n    done(true);\n  }\n  checkPUT(obj: DataObj, serverContext: ServerContext, done: (granted: boolean) => void) {\n    done(true);\n  }\n\n  checkPUTBlob(serverContext: ServerContext, done: (granted: boolean) => void) {\n    done(true);\n  }\n  checkDELETE(key: string, serverContext: ServerContext, done: (granted: boolean) => void) {\n    done(true);\n  }\n  checkFIND(typeCode: string, search: Query, serverContext: ServerContext, done: (granted: boolean) => void) {\n    done(true);\n  }\n}\n\nclass NoUserManager extends UserManager {\n  login(userName: string, password: string, done: (err: string, user: DataObj) => void,\n    serverContext: ServerContext) {\n    done(null, null);\n  }\n\n  getUserKey(serverContext?: ServerContext): string {\n    return \"anonymous\";\n  }\n\n}","\n/// <reference path=\"../../aaswZing/Zing/data/serverRefs.ts\"/>\n/// <reference path=\"../models/ZMake.ts\"/>\n/// <reference path=\"../SoccerStatsEnv.ts\"/>\n/// <reference path=\"../common/AllRightsManager.ts\"/>\nrequire(\"dotenv\").config();\n\nlet env = new SoccerStatsEnv();\nlet dataSource = new MongoDataSource(\n  env.mongoCredentials() + (env.mongoCredentials() ? \"@\" : \"\") + env.mongoHost(),\n  env.mongoPort(),\n  env.mongoDB(),\n  false\n);\nlet rightsManager = new AllRightsManager(dataSource);\ndataSource.setRightsManager(rightsManager);\n\nlet app = new ZingExpress(dataSource, env);\n\nenv.serverStartNotice();\napp.listen(env.serverPort());\n","/// <reference path=\"DataObj.ts\"/>\n/// <reference path=\"MemDataSource.ts\"/>\n/// <reference path=\"MongoDataSource.ts\"/>\n/// <reference path=\"ZingExpress.ts\"/>\n"]}